{"version":3,"sources":["../node_modules/@aspnet/signalr/dist/esm/ILogger.js","../node_modules/@aspnet/signalr/dist/esm/Errors.js","../node_modules/@aspnet/signalr/dist/esm/Utils.js","../node_modules/@aspnet/signalr/dist/esm/HttpClient.js","../node_modules/@aspnet/signalr/dist/esm/Loggers.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@aspnet/signalr/dist/esm/IHubProtocol.js","../node_modules/@aspnet/signalr/dist/esm/XhrHttpClient.js","../node_modules/@aspnet/signalr/dist/esm/DefaultHttpClient.js","../node_modules/@aspnet/signalr/dist/esm/HubConnection.js","../node_modules/@aspnet/signalr/dist/esm/ITransport.js","../node_modules/@aspnet/signalr/dist/esm/AbortController.js","../node_modules/@aspnet/signalr/dist/esm/LongPollingTransport.js","../node_modules/@aspnet/signalr/dist/esm/ServerSentEventsTransport.js","../node_modules/@aspnet/signalr/dist/esm/WebSocketTransport.js","../node_modules/@aspnet/signalr/dist/esm/HttpConnection.js","../node_modules/@aspnet/signalr/dist/esm/JsonHubProtocol.js","../node_modules/@aspnet/signalr/dist/esm/HubConnectionBuilder.js","../node_modules/@aspnet/signalr/dist/esm/index.js","../node_modules/@aspnet/signalr/dist/esm/TextMessageFormat.js","../node_modules/@aspnet/signalr/dist/esm/NodeHttpClient.js","../node_modules/@aspnet/signalr/dist/esm/HandshakeProtocol.js"],"names":["LogLevel","__webpack_require__","d","__webpack_exports__","HttpError","TimeoutError","AbortError","__extends","extendStatics","Object","setPrototypeOf","__proto__","Array","b","p","hasOwnProperty","__","this","constructor","prototype","create","_super","errorMessage","statusCode","_this","trueProto","call","Error","Arg","getDataDetail","isArrayBuffer","sendMessage","createLogger","Subject","ConsoleLogger","_ILogger__WEBPACK_IMPORTED_MODULE_0__","_Loggers__WEBPACK_IMPORTED_MODULE_1__","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","pop","length","push","isRequired","val","name","undefined","isIn","values","data","includeContent","detail","byteLength","view","Uint8Array","str","forEach","num","toString","substr","formatArrayBuffer","ArrayBuffer","logger","transportName","httpClient","url","accessTokenFactory","content","logMessageContent","_a","headers","token","responseType","response","_b","log","Trace","post","Information","instance","observers","item","_i","error","err","observer","complete","subscribe","SubjectSubscription","subject","dispose","index","indexOf","splice","cancelCallback","catch","minimumLogLevel","logLevel","message","Critical","console","Date","toISOString","Warning","warn","info","HttpResponse","HttpClient","__assign","assign","s","i","arguments","statusText","get","options","send","method","delete","getCookieString","NullLogger","_logLevel","_message","_toConsumableArray","arr","isArray","arr2","_arrayWithoutHoles","iter","from","_iterableToArray","_nonIterableSpread","MessageType","XhrHttpClient_XhrHttpClient","XhrHttpClient","request","abortSignal","aborted","Errors","xhr","XMLHttpRequest","open","withCredentials","setRequestHeader","keys","header","onabort","abort","timeout","onload","status","responseText","onerror","ILogger","ontimeout","DefaultHttpClient_extends","DefaultHttpClient_DefaultHttpClient","DefaultHttpClient","NodeHttpClient","HubConnectionState","DEFAULT_TIMEOUT_IN_MS","DEFAULT_PING_INTERVAL_IN_MS","HttpTransportType","TransferFormat","HubConnection_HubConnection","HubConnection","connection","protocol","Utils","serverTimeoutInMilliseconds","keepAliveIntervalInMilliseconds","handshakeProtocol","HandshakeProtocol","onreceive","processIncomingData","onclose","connectionClosed","callbacks","methods","closedCallbacks","id","receivedHandshakeResponse","connectionState","Disconnected","cachedPingMessage","writeMessage","type","Ping","defineProperty","enumerable","configurable","start","handshakeRequest","handshakePromise","version","Debug","handshakeResolver","handshakeRejecter","transferFormat","writeHandshakeRequest","cleanupTimeout","resetTimeoutPeriod","resetKeepAliveInterval","Connected","stop","cleanupPingTimer","stream","methodName","args","promiseQueue","invocationDescriptor","createStreamInvocation","cancelInvocation","createCancelInvocation","invocationId","cancelMessage","invocationEvent","Completion","createInvocation","invoke","on","newMethod","toLowerCase","off","handlers","removeIdx","callback","processHandshakeResponse","messages_1","parseMessages","Invocation","invokeClientMethod","StreamItem","Close","responseMessage","remainingData","parseHandshakeResponse","pingServerHandle","setTimeout","features","inherentKeepAlive","timeoutHandle","serverTimeout","invocationMessage","target","m","key","c","clearTimeout","nonblocking","StreamInvocation","CancelInvocation","AbortController","isAborted","LongPollingTransport_awaiter","LongPollingTransport_generator","LongPollingTransport_LongPollingTransport","LongPollingTransport","pollAbort","running","connect","pollOptions","pollUrl","Binary","signal","getAccessToken","updateHeaderToken","now","closeError","receiving","poll","e_1","pollAborted","raiseOnClose","deleteOptions","logMessage","ServerSentEventsTransport_awaiter","ServerSentEventsTransport_generator","ServerSentEventsTransport_ServerSentEventsTransport","ServerSentEventsTransport","eventSourceConstructor","encodeURIComponent","opened","Text","eventSource","window","cookies","Cookie","onmessage","close","onopen","WebSocketTransport_awaiter","WebSocketTransport_generator","WebSocketTransport_WebSocketTransport","WebSocketTransport","webSocketConstructor","webSocket","replace","binaryType","_event","event","ErrorEvent","readyState","OPEN","wasClean","code","reason","HttpConnection_awaiter","HttpConnection_generator","WebSocketModule","EventSourceModule","requireFunc","require","HttpConnection_HttpConnection","HttpConnection","baseUrl","resolveUrl","isNode","WebSocket","EventSource","startPromise","startInternal","transport","stopError","negotiateResponse","redirects","_loop_1","this_1","state_1","e_2","skipNegotiation","WebSockets","constructTransport","accessToken_1","getNegotiationResponse","ProtocolVersion","accessToken","createTransport","stopConnection","changeState","negotiateUrl","e_3","resolveNegotiateUrl","JSON","parse","createConnectUrl","connectionId","requestedTransport","requestedTransferFormat","connectUrl","transports","transports_1","endpoint","ex_1","isITransport","availableTransports","resolveTransport","ServerSentEvents","LongPolling","transferFormats","map","actualTransport","transportMatches","to","lastIndexOf","document","aTag","createElement","href","substring","JSON_HUB_PROTOCOL_NAME","JsonHubProtocol_JsonHubProtocol","JsonHubProtocol","input","Loggers","hubMessages","TextMessageFormat","parsedMessage","isInvocationMessage","isStreamItemMessage","isCompletionMessage","write","stringify","assertNotEmptyString","HubConnectionBuilder_HubConnectionBuilder","HubConnectionBuilder","configureLogging","logging","withUrl","transportTypeOrOptions","httpConnectionOptions","withHubProtocol","build","output","RecordSeparator","messages","split","RecordSeparatorCode","String","fromCharCode","Buffer","requestModule","_Errors__WEBPACK_IMPORTED_MODULE_0__","_HttpClient__WEBPACK_IMPORTED_MODULE_1__","_ILogger__WEBPACK_IMPORTED_MODULE_2__","_Utils__WEBPACK_IMPORTED_MODULE_3__","cookieJar","jar","defaults","httpRequest","requestBody","currentRequest","encoding","X-Requested-With","statusMessage","_TextMessageFormat__WEBPACK_IMPORTED_MODULE_0__","_Utils__WEBPACK_IMPORTED_MODULE_1__","messageData","binaryData","separatorIndex","responseLength","slice","buffer","textData"],"mappings":"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","file":"static/js/4.f5063f88.chunk.js","sourcesContent":["// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n// These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.\n\n/** Indicates the severity of a log message.\r\n *\r\n * Log Levels are ordered in increasing severity. So `Debug` is more severe than `Trace`, etc.\r\n */\nexport var LogLevel;\n\n(function (LogLevel) {\n  /** Log level for very low severity diagnostic messages. */\n  LogLevel[LogLevel[\"Trace\"] = 0] = \"Trace\";\n  /** Log level for low severity diagnostic messages. */\n\n  LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\n  /** Log level for informational diagnostic messages. */\n\n  LogLevel[LogLevel[\"Information\"] = 2] = \"Information\";\n  /** Log level for diagnostic messages that indicate a non-fatal problem. */\n\n  LogLevel[LogLevel[\"Warning\"] = 3] = \"Warning\";\n  /** Log level for diagnostic messages that indicate a failure in the current operation. */\n\n  LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\n  /** Log level for diagnostic messages that indicate a failure that will terminate the entire application. */\n\n  LogLevel[LogLevel[\"Critical\"] = 5] = \"Critical\";\n  /** The highest possible log level. Used when configuring logging to indicate that no log messages should be emitted. */\n\n  LogLevel[LogLevel[\"None\"] = 6] = \"None\";\n})(LogLevel || (LogLevel = {}));","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/** Error thrown when an HTTP request fails. */\n\n\nvar HttpError =\n/** @class */\nfunction (_super) {\n  __extends(HttpError, _super);\n  /** Constructs a new instance of {@link @aspnet/signalr.HttpError}.\r\n   *\r\n   * @param {string} errorMessage A descriptive error message.\r\n   * @param {number} statusCode The HTTP status code represented by this error.\r\n   */\n\n\n  function HttpError(errorMessage, statusCode) {\n    var _newTarget = this.constructor;\n\n    var _this = this;\n\n    var trueProto = _newTarget.prototype;\n    _this = _super.call(this, errorMessage) || this;\n    _this.statusCode = statusCode; // Workaround issue in Typescript compiler\n    // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\n\n    _this.__proto__ = trueProto;\n    return _this;\n  }\n\n  return HttpError;\n}(Error);\n\nexport { HttpError };\n/** Error thrown when a timeout elapses. */\n\nvar TimeoutError =\n/** @class */\nfunction (_super) {\n  __extends(TimeoutError, _super);\n  /** Constructs a new instance of {@link @aspnet/signalr.TimeoutError}.\r\n   *\r\n   * @param {string} errorMessage A descriptive error message.\r\n   */\n\n\n  function TimeoutError(errorMessage) {\n    var _newTarget = this.constructor;\n\n    if (errorMessage === void 0) {\n      errorMessage = \"A timeout occurred.\";\n    }\n\n    var _this = this;\n\n    var trueProto = _newTarget.prototype;\n    _this = _super.call(this, errorMessage) || this; // Workaround issue in Typescript compiler\n    // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\n\n    _this.__proto__ = trueProto;\n    return _this;\n  }\n\n  return TimeoutError;\n}(Error);\n\nexport { TimeoutError };\n/** Error thrown when an action is aborted. */\n\nvar AbortError =\n/** @class */\nfunction (_super) {\n  __extends(AbortError, _super);\n  /** Constructs a new instance of {@link AbortError}.\r\n   *\r\n   * @param {string} errorMessage A descriptive error message.\r\n   */\n\n\n  function AbortError(errorMessage) {\n    var _newTarget = this.constructor;\n\n    if (errorMessage === void 0) {\n      errorMessage = \"An abort occurred.\";\n    }\n\n    var _this = this;\n\n    var trueProto = _newTarget.prototype;\n    _this = _super.call(this, errorMessage) || this; // Workaround issue in Typescript compiler\n    // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\n\n    _this.__proto__ = trueProto;\n    return _this;\n  }\n\n  return AbortError;\n}(Error);\n\nexport { AbortError };","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { LogLevel } from \"./ILogger\";\nimport { NullLogger } from \"./Loggers\";\n/** @private */\n\nvar Arg =\n/** @class */\nfunction () {\n  function Arg() {}\n\n  Arg.isRequired = function (val, name) {\n    if (val === null || val === undefined) {\n      throw new Error(\"The '\" + name + \"' argument is required.\");\n    }\n  };\n\n  Arg.isIn = function (val, values, name) {\n    // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\n    if (!(val in values)) {\n      throw new Error(\"Unknown \" + name + \" value: \" + val + \".\");\n    }\n  };\n\n  return Arg;\n}();\n\nexport { Arg };\n/** @private */\n\nexport function getDataDetail(data, includeContent) {\n  var detail = \"\";\n\n  if (isArrayBuffer(data)) {\n    detail = \"Binary data of length \" + data.byteLength;\n\n    if (includeContent) {\n      detail += \". Content: '\" + formatArrayBuffer(data) + \"'\";\n    }\n  } else if (typeof data === \"string\") {\n    detail = \"String data of length \" + data.length;\n\n    if (includeContent) {\n      detail += \". Content: '\" + data + \"'\";\n    }\n  }\n\n  return detail;\n}\n/** @private */\n\nexport function formatArrayBuffer(data) {\n  var view = new Uint8Array(data); // Uint8Array.map only supports returning another Uint8Array?\n\n  var str = \"\";\n  view.forEach(function (num) {\n    var pad = num < 16 ? \"0\" : \"\";\n    str += \"0x\" + pad + num.toString(16) + \" \";\n  }); // Trim of trailing space.\n\n  return str.substr(0, str.length - 1);\n} // Also in signalr-protocol-msgpack/Utils.ts\n\n/** @private */\n\nexport function isArrayBuffer(val) {\n  return val && typeof ArrayBuffer !== \"undefined\" && (val instanceof ArrayBuffer || // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\n  val.constructor && val.constructor.name === \"ArrayBuffer\");\n}\n/** @private */\n\nexport function sendMessage(logger, transportName, httpClient, url, accessTokenFactory, content, logMessageContent) {\n  return __awaiter(this, void 0, void 0, function () {\n    var _a, headers, token, responseType, response;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (!accessTokenFactory) return [3\n          /*break*/\n          , 2];\n          return [4\n          /*yield*/\n          , accessTokenFactory()];\n\n        case 1:\n          token = _b.sent();\n\n          if (token) {\n            headers = (_a = {}, _a[\"Authorization\"] = \"Bearer \" + token, _a);\n          }\n\n          _b.label = 2;\n\n        case 2:\n          logger.log(LogLevel.Trace, \"(\" + transportName + \" transport) sending data. \" + getDataDetail(content, logMessageContent) + \".\");\n          responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\n          return [4\n          /*yield*/\n          , httpClient.post(url, {\n            content: content,\n            headers: headers,\n            responseType: responseType\n          })];\n\n        case 3:\n          response = _b.sent();\n          logger.log(LogLevel.Trace, \"(\" + transportName + \" transport) request complete. Response status: \" + response.statusCode + \".\");\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n/** @private */\n\nexport function createLogger(logger) {\n  if (logger === undefined) {\n    return new ConsoleLogger(LogLevel.Information);\n  }\n\n  if (logger === null) {\n    return NullLogger.instance;\n  }\n\n  if (logger.log) {\n    return logger;\n  }\n\n  return new ConsoleLogger(logger);\n}\n/** @private */\n\nvar Subject =\n/** @class */\nfunction () {\n  function Subject() {\n    this.observers = [];\n  }\n\n  Subject.prototype.next = function (item) {\n    for (var _i = 0, _a = this.observers; _i < _a.length; _i++) {\n      var observer = _a[_i];\n      observer.next(item);\n    }\n  };\n\n  Subject.prototype.error = function (err) {\n    for (var _i = 0, _a = this.observers; _i < _a.length; _i++) {\n      var observer = _a[_i];\n\n      if (observer.error) {\n        observer.error(err);\n      }\n    }\n  };\n\n  Subject.prototype.complete = function () {\n    for (var _i = 0, _a = this.observers; _i < _a.length; _i++) {\n      var observer = _a[_i];\n\n      if (observer.complete) {\n        observer.complete();\n      }\n    }\n  };\n\n  Subject.prototype.subscribe = function (observer) {\n    this.observers.push(observer);\n    return new SubjectSubscription(this, observer);\n  };\n\n  return Subject;\n}();\n\nexport { Subject };\n/** @private */\n\nvar SubjectSubscription =\n/** @class */\nfunction () {\n  function SubjectSubscription(subject, observer) {\n    this.subject = subject;\n    this.observer = observer;\n  }\n\n  SubjectSubscription.prototype.dispose = function () {\n    var index = this.subject.observers.indexOf(this.observer);\n\n    if (index > -1) {\n      this.subject.observers.splice(index, 1);\n    }\n\n    if (this.subject.observers.length === 0 && this.subject.cancelCallback) {\n      this.subject.cancelCallback().catch(function (_) {});\n    }\n  };\n\n  return SubjectSubscription;\n}();\n\nexport { SubjectSubscription };\n/** @private */\n\nvar ConsoleLogger =\n/** @class */\nfunction () {\n  function ConsoleLogger(minimumLogLevel) {\n    this.minimumLogLevel = minimumLogLevel;\n  }\n\n  ConsoleLogger.prototype.log = function (logLevel, message) {\n    if (logLevel >= this.minimumLogLevel) {\n      switch (logLevel) {\n        case LogLevel.Critical:\n        case LogLevel.Error:\n          console.error(\"[\" + new Date().toISOString() + \"] \" + LogLevel[logLevel] + \": \" + message);\n          break;\n\n        case LogLevel.Warning:\n          console.warn(\"[\" + new Date().toISOString() + \"] \" + LogLevel[logLevel] + \": \" + message);\n          break;\n\n        case LogLevel.Information:\n          console.info(\"[\" + new Date().toISOString() + \"] \" + LogLevel[logLevel] + \": \" + message);\n          break;\n\n        default:\n          // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\n          console.log(\"[\" + new Date().toISOString() + \"] \" + LogLevel[logLevel] + \": \" + message);\n          break;\n      }\n    }\n  };\n\n  return ConsoleLogger;\n}();\n\nexport { ConsoleLogger };","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nvar __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) {\n      if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n  }\n\n  return t;\n};\n/** Represents an HTTP response. */\n\n\nvar HttpResponse =\n/** @class */\nfunction () {\n  function HttpResponse(statusCode, statusText, content) {\n    this.statusCode = statusCode;\n    this.statusText = statusText;\n    this.content = content;\n  }\n\n  return HttpResponse;\n}();\n\nexport { HttpResponse };\n/** Abstraction over an HTTP client.\r\n *\r\n * This class provides an abstraction over an HTTP client so that a different implementation can be provided on different platforms.\r\n */\n\nvar HttpClient =\n/** @class */\nfunction () {\n  function HttpClient() {}\n\n  HttpClient.prototype.get = function (url, options) {\n    return this.send(__assign({}, options, {\n      method: \"GET\",\n      url: url\n    }));\n  };\n\n  HttpClient.prototype.post = function (url, options) {\n    return this.send(__assign({}, options, {\n      method: \"POST\",\n      url: url\n    }));\n  };\n\n  HttpClient.prototype.delete = function (url, options) {\n    return this.send(__assign({}, options, {\n      method: \"DELETE\",\n      url: url\n    }));\n  };\n  /** Gets all cookies that apply to the specified URL.\r\n   *\r\n   * @param url The URL that the cookies are valid for.\r\n   * @returns {string} A string containing all the key-value cookie pairs for the specified URL.\r\n   */\n  // @ts-ignore\n\n\n  HttpClient.prototype.getCookieString = function (url) {\n    return \"\";\n  };\n\n  return HttpClient;\n}();\n\nexport { HttpClient };","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n\n/** A logger that does nothing when log messages are sent to it. */\nvar NullLogger =\n/** @class */\nfunction () {\n  function NullLogger() {}\n  /** @inheritDoc */\n  // tslint:disable-next-line\n\n\n  NullLogger.prototype.log = function (_logLevel, _message) {};\n  /** The singleton instance of the {@link @aspnet/signalr.NullLogger}. */\n\n\n  NullLogger.instance = new NullLogger();\n  return NullLogger;\n}();\n\nexport { NullLogger };","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n\n/** Defines the type of a Hub Message. */\nexport var MessageType;\n\n(function (MessageType) {\n  /** Indicates the message is an Invocation message and implements the {@link @aspnet/signalr.InvocationMessage} interface. */\n  MessageType[MessageType[\"Invocation\"] = 1] = \"Invocation\";\n  /** Indicates the message is a StreamItem message and implements the {@link @aspnet/signalr.StreamItemMessage} interface. */\n\n  MessageType[MessageType[\"StreamItem\"] = 2] = \"StreamItem\";\n  /** Indicates the message is a Completion message and implements the {@link @aspnet/signalr.CompletionMessage} interface. */\n\n  MessageType[MessageType[\"Completion\"] = 3] = \"Completion\";\n  /** Indicates the message is a Stream Invocation message and implements the {@link @aspnet/signalr.StreamInvocationMessage} interface. */\n\n  MessageType[MessageType[\"StreamInvocation\"] = 4] = \"StreamInvocation\";\n  /** Indicates the message is a Cancel Invocation message and implements the {@link @aspnet/signalr.CancelInvocationMessage} interface. */\n\n  MessageType[MessageType[\"CancelInvocation\"] = 5] = \"CancelInvocation\";\n  /** Indicates the message is a Ping message and implements the {@link @aspnet/signalr.PingMessage} interface. */\n\n  MessageType[MessageType[\"Ping\"] = 6] = \"Ping\";\n  /** Indicates the message is a Close message and implements the {@link @aspnet/signalr.CloseMessage} interface. */\n\n  MessageType[MessageType[\"Close\"] = 7] = \"Close\";\n})(MessageType || (MessageType = {}));","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\nimport { LogLevel } from \"./ILogger\";\n\nvar XhrHttpClient =\n/** @class */\nfunction (_super) {\n  __extends(XhrHttpClient, _super);\n\n  function XhrHttpClient(logger) {\n    var _this = _super.call(this) || this;\n\n    _this.logger = logger;\n    return _this;\n  }\n  /** @inheritDoc */\n\n\n  XhrHttpClient.prototype.send = function (request) {\n    var _this = this; // Check that abort was not signaled before calling send\n\n\n    if (request.abortSignal && request.abortSignal.aborted) {\n      return Promise.reject(new AbortError());\n    }\n\n    if (!request.method) {\n      return Promise.reject(new Error(\"No method defined.\"));\n    }\n\n    if (!request.url) {\n      return Promise.reject(new Error(\"No url defined.\"));\n    }\n\n    return new Promise(function (resolve, reject) {\n      var xhr = new XMLHttpRequest();\n      xhr.open(request.method, request.url, true);\n      xhr.withCredentials = true;\n      xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\"); // Explicitly setting the Content-Type header for React Native on Android platform.\n\n      xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\n      var headers = request.headers;\n\n      if (headers) {\n        Object.keys(headers).forEach(function (header) {\n          xhr.setRequestHeader(header, headers[header]);\n        });\n      }\n\n      if (request.responseType) {\n        xhr.responseType = request.responseType;\n      }\n\n      if (request.abortSignal) {\n        request.abortSignal.onabort = function () {\n          xhr.abort();\n          reject(new AbortError());\n        };\n      }\n\n      if (request.timeout) {\n        xhr.timeout = request.timeout;\n      }\n\n      xhr.onload = function () {\n        if (request.abortSignal) {\n          request.abortSignal.onabort = null;\n        }\n\n        if (xhr.status >= 200 && xhr.status < 300) {\n          resolve(new HttpResponse(xhr.status, xhr.statusText, xhr.response || xhr.responseText));\n        } else {\n          reject(new HttpError(xhr.statusText, xhr.status));\n        }\n      };\n\n      xhr.onerror = function () {\n        _this.logger.log(LogLevel.Warning, \"Error from HTTP request. \" + xhr.status + \": \" + xhr.statusText + \".\");\n\n        reject(new HttpError(xhr.statusText, xhr.status));\n      };\n\n      xhr.ontimeout = function () {\n        _this.logger.log(LogLevel.Warning, \"Timeout from HTTP request.\");\n\n        reject(new TimeoutError());\n      };\n\n      xhr.send(request.content || \"\");\n    });\n  };\n\n  return XhrHttpClient;\n}(HttpClient);\n\nexport { XhrHttpClient };","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { AbortError } from \"./Errors\";\nimport { HttpClient } from \"./HttpClient\";\nimport { NodeHttpClient } from \"./NodeHttpClient\";\nimport { XhrHttpClient } from \"./XhrHttpClient\";\n/** Default implementation of {@link @aspnet/signalr.HttpClient}. */\n\nvar DefaultHttpClient =\n/** @class */\nfunction (_super) {\n  __extends(DefaultHttpClient, _super);\n  /** Creates a new instance of the {@link @aspnet/signalr.DefaultHttpClient}, using the provided {@link @aspnet/signalr.ILogger} to log messages. */\n\n\n  function DefaultHttpClient(logger) {\n    var _this = _super.call(this) || this;\n\n    if (typeof XMLHttpRequest !== \"undefined\") {\n      _this.httpClient = new XhrHttpClient(logger);\n    } else {\n      _this.httpClient = new NodeHttpClient(logger);\n    }\n\n    return _this;\n  }\n  /** @inheritDoc */\n\n\n  DefaultHttpClient.prototype.send = function (request) {\n    // Check that abort was not signaled before calling send\n    if (request.abortSignal && request.abortSignal.aborted) {\n      return Promise.reject(new AbortError());\n    }\n\n    if (!request.method) {\n      return Promise.reject(new Error(\"No method defined.\"));\n    }\n\n    if (!request.url) {\n      return Promise.reject(new Error(\"No url defined.\"));\n    }\n\n    return this.httpClient.send(request);\n  };\n\n  DefaultHttpClient.prototype.getCookieString = function (url) {\n    return this.httpClient.getCookieString(url);\n  };\n\n  return DefaultHttpClient;\n}(HttpClient);\n\nexport { DefaultHttpClient };","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { HandshakeProtocol } from \"./HandshakeProtocol\";\nimport { MessageType } from \"./IHubProtocol\";\nimport { LogLevel } from \"./ILogger\";\nimport { Arg, Subject } from \"./Utils\";\nvar DEFAULT_TIMEOUT_IN_MS = 30 * 1000;\nvar DEFAULT_PING_INTERVAL_IN_MS = 15 * 1000;\n/** Describes the current state of the {@link HubConnection} to the server. */\n\nexport var HubConnectionState;\n\n(function (HubConnectionState) {\n  /** The hub connection is disconnected. */\n  HubConnectionState[HubConnectionState[\"Disconnected\"] = 0] = \"Disconnected\";\n  /** The hub connection is connected. */\n\n  HubConnectionState[HubConnectionState[\"Connected\"] = 1] = \"Connected\";\n})(HubConnectionState || (HubConnectionState = {}));\n/** Represents a connection to a SignalR Hub. */\n\n\nvar HubConnection =\n/** @class */\nfunction () {\n  function HubConnection(connection, logger, protocol) {\n    var _this = this;\n\n    Arg.isRequired(connection, \"connection\");\n    Arg.isRequired(logger, \"logger\");\n    Arg.isRequired(protocol, \"protocol\");\n    this.serverTimeoutInMilliseconds = DEFAULT_TIMEOUT_IN_MS;\n    this.keepAliveIntervalInMilliseconds = DEFAULT_PING_INTERVAL_IN_MS;\n    this.logger = logger;\n    this.protocol = protocol;\n    this.connection = connection;\n    this.handshakeProtocol = new HandshakeProtocol();\n\n    this.connection.onreceive = function (data) {\n      return _this.processIncomingData(data);\n    };\n\n    this.connection.onclose = function (error) {\n      return _this.connectionClosed(error);\n    };\n\n    this.callbacks = {};\n    this.methods = {};\n    this.closedCallbacks = [];\n    this.id = 0;\n    this.receivedHandshakeResponse = false;\n    this.connectionState = HubConnectionState.Disconnected;\n    this.cachedPingMessage = this.protocol.writeMessage({\n      type: MessageType.Ping\n    });\n  }\n  /** @internal */\n  // Using a public static factory method means we can have a private constructor and an _internal_\n  // create method that can be used by HubConnectionBuilder. An \"internal\" constructor would just\n  // be stripped away and the '.d.ts' file would have no constructor, which is interpreted as a\n  // public parameter-less constructor.\n\n\n  HubConnection.create = function (connection, logger, protocol) {\n    return new HubConnection(connection, logger, protocol);\n  };\n\n  Object.defineProperty(HubConnection.prototype, \"state\", {\n    /** Indicates the state of the {@link HubConnection} to the server. */\n    get: function get() {\n      return this.connectionState;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /** Starts the connection.\r\n   *\r\n   * @returns {Promise<void>} A Promise that resolves when the connection has been successfully established, or rejects with an error.\r\n   */\n\n  HubConnection.prototype.start = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var handshakeRequest, handshakePromise;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            handshakeRequest = {\n              protocol: this.protocol.name,\n              version: this.protocol.version\n            };\n            this.logger.log(LogLevel.Debug, \"Starting HubConnection.\");\n            this.receivedHandshakeResponse = false;\n            handshakePromise = new Promise(function (resolve, reject) {\n              _this.handshakeResolver = resolve;\n              _this.handshakeRejecter = reject;\n            });\n            return [4\n            /*yield*/\n            , this.connection.start(this.protocol.transferFormat)];\n\n          case 1:\n            _a.sent();\n\n            this.logger.log(LogLevel.Debug, \"Sending handshake request.\");\n            return [4\n            /*yield*/\n            , this.sendMessage(this.handshakeProtocol.writeHandshakeRequest(handshakeRequest))];\n\n          case 2:\n            _a.sent();\n\n            this.logger.log(LogLevel.Information, \"Using HubProtocol '\" + this.protocol.name + \"'.\"); // defensively cleanup timeout in case we receive a message from the server before we finish start\n\n            this.cleanupTimeout();\n            this.resetTimeoutPeriod();\n            this.resetKeepAliveInterval(); // Wait for the handshake to complete before marking connection as connected\n\n            return [4\n            /*yield*/\n            , handshakePromise];\n\n          case 3:\n            // Wait for the handshake to complete before marking connection as connected\n            _a.sent();\n\n            this.connectionState = HubConnectionState.Connected;\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /** Stops the connection.\r\n   *\r\n   * @returns {Promise<void>} A Promise that resolves when the connection has been successfully terminated, or rejects with an error.\r\n   */\n\n\n  HubConnection.prototype.stop = function () {\n    this.logger.log(LogLevel.Debug, \"Stopping HubConnection.\");\n    this.cleanupTimeout();\n    this.cleanupPingTimer();\n    return this.connection.stop();\n  };\n  /** Invokes a streaming hub method on the server using the specified name and arguments.\r\n   *\r\n   * @typeparam T The type of the items returned by the server.\r\n   * @param {string} methodName The name of the server method to invoke.\r\n   * @param {any[]} args The arguments used to invoke the server method.\r\n   * @returns {IStreamResult<T>} An object that yields results from the server as they are received.\r\n   */\n\n\n  HubConnection.prototype.stream = function (methodName) {\n    var _this = this;\n\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    var invocationDescriptor = this.createStreamInvocation(methodName, args);\n    var promiseQueue;\n    var subject = new Subject();\n\n    subject.cancelCallback = function () {\n      var cancelInvocation = _this.createCancelInvocation(invocationDescriptor.invocationId);\n\n      var cancelMessage = _this.protocol.writeMessage(cancelInvocation);\n\n      delete _this.callbacks[invocationDescriptor.invocationId];\n      return promiseQueue.then(function () {\n        return _this.sendMessage(cancelMessage);\n      });\n    };\n\n    this.callbacks[invocationDescriptor.invocationId] = function (invocationEvent, error) {\n      if (error) {\n        subject.error(error);\n        return;\n      } else if (invocationEvent) {\n        // invocationEvent will not be null when an error is not passed to the callback\n        if (invocationEvent.type === MessageType.Completion) {\n          if (invocationEvent.error) {\n            subject.error(new Error(invocationEvent.error));\n          } else {\n            subject.complete();\n          }\n        } else {\n          subject.next(invocationEvent.item);\n        }\n      }\n    };\n\n    var message = this.protocol.writeMessage(invocationDescriptor);\n    promiseQueue = this.sendMessage(message).catch(function (e) {\n      subject.error(e);\n      delete _this.callbacks[invocationDescriptor.invocationId];\n    });\n    return subject;\n  };\n\n  HubConnection.prototype.sendMessage = function (message) {\n    this.resetKeepAliveInterval();\n    return this.connection.send(message);\n  };\n  /** Invokes a hub method on the server using the specified name and arguments. Does not wait for a response from the receiver.\r\n   *\r\n   * The Promise returned by this method resolves when the client has sent the invocation to the server. The server may still\r\n   * be processing the invocation.\r\n   *\r\n   * @param {string} methodName The name of the server method to invoke.\r\n   * @param {any[]} args The arguments used to invoke the server method.\r\n   * @returns {Promise<void>} A Promise that resolves when the invocation has been successfully sent, or rejects with an error.\r\n   */\n\n\n  HubConnection.prototype.send = function (methodName) {\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    var invocationDescriptor = this.createInvocation(methodName, args, true);\n    var message = this.protocol.writeMessage(invocationDescriptor);\n    return this.sendMessage(message);\n  };\n  /** Invokes a hub method on the server using the specified name and arguments.\r\n   *\r\n   * The Promise returned by this method resolves when the server indicates it has finished invoking the method. When the promise\r\n   * resolves, the server has finished invoking the method. If the server method returns a result, it is produced as the result of\r\n   * resolving the Promise.\r\n   *\r\n   * @typeparam T The expected return type.\r\n   * @param {string} methodName The name of the server method to invoke.\r\n   * @param {any[]} args The arguments used to invoke the server method.\r\n   * @returns {Promise<T>} A Promise that resolves with the result of the server method (if any), or rejects with an error.\r\n   */\n\n\n  HubConnection.prototype.invoke = function (methodName) {\n    var _this = this;\n\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    var invocationDescriptor = this.createInvocation(methodName, args, false);\n    var p = new Promise(function (resolve, reject) {\n      // invocationId will always have a value for a non-blocking invocation\n      _this.callbacks[invocationDescriptor.invocationId] = function (invocationEvent, error) {\n        if (error) {\n          reject(error);\n          return;\n        } else if (invocationEvent) {\n          // invocationEvent will not be null when an error is not passed to the callback\n          if (invocationEvent.type === MessageType.Completion) {\n            if (invocationEvent.error) {\n              reject(new Error(invocationEvent.error));\n            } else {\n              resolve(invocationEvent.result);\n            }\n          } else {\n            reject(new Error(\"Unexpected message type: \" + invocationEvent.type));\n          }\n        }\n      };\n\n      var message = _this.protocol.writeMessage(invocationDescriptor);\n\n      _this.sendMessage(message).catch(function (e) {\n        reject(e); // invocationId will always have a value for a non-blocking invocation\n\n        delete _this.callbacks[invocationDescriptor.invocationId];\n      });\n    });\n    return p;\n  };\n  /** Registers a handler that will be invoked when the hub method with the specified method name is invoked.\r\n   *\r\n   * @param {string} methodName The name of the hub method to define.\r\n   * @param {Function} newMethod The handler that will be raised when the hub method is invoked.\r\n   */\n\n\n  HubConnection.prototype.on = function (methodName, newMethod) {\n    if (!methodName || !newMethod) {\n      return;\n    }\n\n    methodName = methodName.toLowerCase();\n\n    if (!this.methods[methodName]) {\n      this.methods[methodName] = [];\n    } // Preventing adding the same handler multiple times.\n\n\n    if (this.methods[methodName].indexOf(newMethod) !== -1) {\n      return;\n    }\n\n    this.methods[methodName].push(newMethod);\n  };\n\n  HubConnection.prototype.off = function (methodName, method) {\n    if (!methodName) {\n      return;\n    }\n\n    methodName = methodName.toLowerCase();\n    var handlers = this.methods[methodName];\n\n    if (!handlers) {\n      return;\n    }\n\n    if (method) {\n      var removeIdx = handlers.indexOf(method);\n\n      if (removeIdx !== -1) {\n        handlers.splice(removeIdx, 1);\n\n        if (handlers.length === 0) {\n          delete this.methods[methodName];\n        }\n      }\n    } else {\n      delete this.methods[methodName];\n    }\n  };\n  /** Registers a handler that will be invoked when the connection is closed.\r\n   *\r\n   * @param {Function} callback The handler that will be invoked when the connection is closed. Optionally receives a single argument containing the error that caused the connection to close (if any).\r\n   */\n\n\n  HubConnection.prototype.onclose = function (callback) {\n    if (callback) {\n      this.closedCallbacks.push(callback);\n    }\n  };\n\n  HubConnection.prototype.processIncomingData = function (data) {\n    this.cleanupTimeout();\n\n    if (!this.receivedHandshakeResponse) {\n      data = this.processHandshakeResponse(data);\n      this.receivedHandshakeResponse = true;\n    } // Data may have all been read when processing handshake response\n\n\n    if (data) {\n      // Parse the messages\n      var messages = this.protocol.parseMessages(data, this.logger);\n\n      for (var _i = 0, messages_1 = messages; _i < messages_1.length; _i++) {\n        var message = messages_1[_i];\n\n        switch (message.type) {\n          case MessageType.Invocation:\n            this.invokeClientMethod(message);\n            break;\n\n          case MessageType.StreamItem:\n          case MessageType.Completion:\n            var callback = this.callbacks[message.invocationId];\n\n            if (callback != null) {\n              if (message.type === MessageType.Completion) {\n                delete this.callbacks[message.invocationId];\n              }\n\n              callback(message);\n            }\n\n            break;\n\n          case MessageType.Ping:\n            // Don't care about pings\n            break;\n\n          case MessageType.Close:\n            this.logger.log(LogLevel.Information, \"Close message received from server.\"); // We don't want to wait on the stop itself.\n            // tslint:disable-next-line:no-floating-promises\n\n            this.connection.stop(message.error ? new Error(\"Server returned an error on close: \" + message.error) : undefined);\n            break;\n\n          default:\n            this.logger.log(LogLevel.Warning, \"Invalid message type: \" + message.type + \".\");\n            break;\n        }\n      }\n    }\n\n    this.resetTimeoutPeriod();\n  };\n\n  HubConnection.prototype.processHandshakeResponse = function (data) {\n    var _a;\n\n    var responseMessage;\n    var remainingData;\n\n    try {\n      _a = this.handshakeProtocol.parseHandshakeResponse(data), remainingData = _a[0], responseMessage = _a[1];\n    } catch (e) {\n      var message = \"Error parsing handshake response: \" + e;\n      this.logger.log(LogLevel.Error, message);\n      var error = new Error(message); // We don't want to wait on the stop itself.\n      // tslint:disable-next-line:no-floating-promises\n\n      this.connection.stop(error);\n      this.handshakeRejecter(error);\n      throw error;\n    }\n\n    if (responseMessage.error) {\n      var message = \"Server returned handshake error: \" + responseMessage.error;\n      this.logger.log(LogLevel.Error, message);\n      this.handshakeRejecter(message); // We don't want to wait on the stop itself.\n      // tslint:disable-next-line:no-floating-promises\n\n      this.connection.stop(new Error(message));\n      throw new Error(message);\n    } else {\n      this.logger.log(LogLevel.Debug, \"Server handshake complete.\");\n    }\n\n    this.handshakeResolver();\n    return remainingData;\n  };\n\n  HubConnection.prototype.resetKeepAliveInterval = function () {\n    var _this = this;\n\n    this.cleanupPingTimer();\n    this.pingServerHandle = setTimeout(function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              if (!(this.connectionState === HubConnectionState.Connected)) return [3\n              /*break*/\n              , 4];\n              _b.label = 1;\n\n            case 1:\n              _b.trys.push([1, 3,, 4]);\n\n              return [4\n              /*yield*/\n              , this.sendMessage(this.cachedPingMessage)];\n\n            case 2:\n              _b.sent();\n\n              return [3\n              /*break*/\n              , 4];\n\n            case 3:\n              _a = _b.sent(); // We don't care about the error. It should be seen elsewhere in the client.\n              // The connection is probably in a bad or closed state now, cleanup the timer so it stops triggering\n\n              this.cleanupPingTimer();\n              return [3\n              /*break*/\n              , 4];\n\n            case 4:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }, this.keepAliveIntervalInMilliseconds);\n  };\n\n  HubConnection.prototype.resetTimeoutPeriod = function () {\n    var _this = this;\n\n    if (!this.connection.features || !this.connection.features.inherentKeepAlive) {\n      // Set the timeout timer\n      this.timeoutHandle = setTimeout(function () {\n        return _this.serverTimeout();\n      }, this.serverTimeoutInMilliseconds);\n    }\n  };\n\n  HubConnection.prototype.serverTimeout = function () {\n    // The server hasn't talked to us in a while. It doesn't like us anymore ... :(\n    // Terminate the connection, but we don't need to wait on the promise.\n    // tslint:disable-next-line:no-floating-promises\n    this.connection.stop(new Error(\"Server timeout elapsed without receiving a message from the server.\"));\n  };\n\n  HubConnection.prototype.invokeClientMethod = function (invocationMessage) {\n    var _this = this;\n\n    var methods = this.methods[invocationMessage.target.toLowerCase()];\n\n    if (methods) {\n      methods.forEach(function (m) {\n        return m.apply(_this, invocationMessage.arguments);\n      });\n\n      if (invocationMessage.invocationId) {\n        // This is not supported in v1. So we return an error to avoid blocking the server waiting for the response.\n        var message = \"Server requested a response, which is not supported in this version of the client.\";\n        this.logger.log(LogLevel.Error, message); // We don't need to wait on this Promise.\n        // tslint:disable-next-line:no-floating-promises\n\n        this.connection.stop(new Error(message));\n      }\n    } else {\n      this.logger.log(LogLevel.Warning, \"No client method with the name '\" + invocationMessage.target + \"' found.\");\n    }\n  };\n\n  HubConnection.prototype.connectionClosed = function (error) {\n    var _this = this;\n\n    var callbacks = this.callbacks;\n    this.callbacks = {};\n    this.connectionState = HubConnectionState.Disconnected; // if handshake is in progress start will be waiting for the handshake promise, so we complete it\n    // if it has already completed this should just noop\n\n    if (this.handshakeRejecter) {\n      this.handshakeRejecter(error);\n    }\n\n    Object.keys(callbacks).forEach(function (key) {\n      var callback = callbacks[key];\n      callback(null, error ? error : new Error(\"Invocation canceled due to connection being closed.\"));\n    });\n    this.cleanupTimeout();\n    this.cleanupPingTimer();\n    this.closedCallbacks.forEach(function (c) {\n      return c.apply(_this, [error]);\n    });\n  };\n\n  HubConnection.prototype.cleanupPingTimer = function () {\n    if (this.pingServerHandle) {\n      clearTimeout(this.pingServerHandle);\n    }\n  };\n\n  HubConnection.prototype.cleanupTimeout = function () {\n    if (this.timeoutHandle) {\n      clearTimeout(this.timeoutHandle);\n    }\n  };\n\n  HubConnection.prototype.createInvocation = function (methodName, args, nonblocking) {\n    if (nonblocking) {\n      return {\n        arguments: args,\n        target: methodName,\n        type: MessageType.Invocation\n      };\n    } else {\n      var id = this.id;\n      this.id++;\n      return {\n        arguments: args,\n        invocationId: id.toString(),\n        target: methodName,\n        type: MessageType.Invocation\n      };\n    }\n  };\n\n  HubConnection.prototype.createStreamInvocation = function (methodName, args) {\n    var id = this.id;\n    this.id++;\n    return {\n      arguments: args,\n      invocationId: id.toString(),\n      target: methodName,\n      type: MessageType.StreamInvocation\n    };\n  };\n\n  HubConnection.prototype.createCancelInvocation = function (id) {\n    return {\n      invocationId: id,\n      type: MessageType.CancelInvocation\n    };\n  };\n\n  return HubConnection;\n}();\n\nexport { HubConnection };","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n// This will be treated as a bit flag in the future, so we keep it using power-of-two values.\n\n/** Specifies a specific HTTP transport type. */\nexport var HttpTransportType;\n\n(function (HttpTransportType) {\n  /** Specifies no transport preference. */\n  HttpTransportType[HttpTransportType[\"None\"] = 0] = \"None\";\n  /** Specifies the WebSockets transport. */\n\n  HttpTransportType[HttpTransportType[\"WebSockets\"] = 1] = \"WebSockets\";\n  /** Specifies the Server-Sent Events transport. */\n\n  HttpTransportType[HttpTransportType[\"ServerSentEvents\"] = 2] = \"ServerSentEvents\";\n  /** Specifies the Long Polling transport. */\n\n  HttpTransportType[HttpTransportType[\"LongPolling\"] = 4] = \"LongPolling\";\n})(HttpTransportType || (HttpTransportType = {}));\n/** Specifies the transfer format for a connection. */\n\n\nexport var TransferFormat;\n\n(function (TransferFormat) {\n  /** Specifies that only text data will be transmitted over the connection. */\n  TransferFormat[TransferFormat[\"Text\"] = 1] = \"Text\";\n  /** Specifies that binary data will be transmitted over the connection. */\n\n  TransferFormat[TransferFormat[\"Binary\"] = 2] = \"Binary\";\n})(TransferFormat || (TransferFormat = {}));","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n// Rough polyfill of https://developer.mozilla.org/en-US/docs/Web/API/AbortController\n// We don't actually ever use the API being polyfilled, we always use the polyfill because\n// it's a very new API right now.\n// Not exported from index.\n\n/** @private */\nvar AbortController =\n/** @class */\nfunction () {\n  function AbortController() {\n    this.isAborted = false;\n    this.onabort = null;\n  }\n\n  AbortController.prototype.abort = function () {\n    if (!this.isAborted) {\n      this.isAborted = true;\n\n      if (this.onabort) {\n        this.onabort();\n      }\n    }\n  };\n\n  Object.defineProperty(AbortController.prototype, \"signal\", {\n    get: function get() {\n      return this;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AbortController.prototype, \"aborted\", {\n    get: function get() {\n      return this.isAborted;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return AbortController;\n}();\n\nexport { AbortController };","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { AbortController } from \"./AbortController\";\nimport { HttpError, TimeoutError } from \"./Errors\";\nimport { LogLevel } from \"./ILogger\";\nimport { TransferFormat } from \"./ITransport\";\nimport { Arg, getDataDetail, sendMessage } from \"./Utils\"; // Not exported from 'index', this type is internal.\n\n/** @private */\n\nvar LongPollingTransport =\n/** @class */\nfunction () {\n  function LongPollingTransport(httpClient, accessTokenFactory, logger, logMessageContent) {\n    this.httpClient = httpClient;\n    this.accessTokenFactory = accessTokenFactory;\n    this.logger = logger;\n    this.pollAbort = new AbortController();\n    this.logMessageContent = logMessageContent;\n    this.running = false;\n    this.onreceive = null;\n    this.onclose = null;\n  }\n\n  Object.defineProperty(LongPollingTransport.prototype, \"pollAborted\", {\n    // This is an internal type, not exported from 'index' so this is really just internal.\n    get: function get() {\n      return this.pollAbort.aborted;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  LongPollingTransport.prototype.connect = function (url, transferFormat) {\n    return __awaiter(this, void 0, void 0, function () {\n      var pollOptions, token, pollUrl, response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            Arg.isRequired(url, \"url\");\n            Arg.isRequired(transferFormat, \"transferFormat\");\n            Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\n            this.url = url;\n            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Connecting.\"); // Allow binary format on Node and Browsers that support binary content (indicated by the presence of responseType property)\n\n            if (transferFormat === TransferFormat.Binary && typeof XMLHttpRequest !== \"undefined\" && typeof new XMLHttpRequest().responseType !== \"string\") {\n              throw new Error(\"Binary protocols over XmlHttpRequest not implementing advanced features are not supported.\");\n            }\n\n            pollOptions = {\n              abortSignal: this.pollAbort.signal,\n              headers: {},\n              timeout: 100000\n            };\n\n            if (transferFormat === TransferFormat.Binary) {\n              pollOptions.responseType = \"arraybuffer\";\n            }\n\n            return [4\n            /*yield*/\n            , this.getAccessToken()];\n\n          case 1:\n            token = _a.sent();\n            this.updateHeaderToken(pollOptions, token);\n            pollUrl = url + \"&_=\" + Date.now();\n            this.logger.log(LogLevel.Trace, \"(LongPolling transport) polling: \" + pollUrl + \".\");\n            return [4\n            /*yield*/\n            , this.httpClient.get(pollUrl, pollOptions)];\n\n          case 2:\n            response = _a.sent();\n\n            if (response.statusCode !== 200) {\n              this.logger.log(LogLevel.Error, \"(LongPolling transport) Unexpected response code: \" + response.statusCode + \".\"); // Mark running as false so that the poll immediately ends and runs the close logic\n\n              this.closeError = new HttpError(response.statusText || \"\", response.statusCode);\n              this.running = false;\n            } else {\n              this.running = true;\n            }\n\n            this.receiving = this.poll(this.url, pollOptions);\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  LongPollingTransport.prototype.getAccessToken = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.accessTokenFactory) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.accessTokenFactory()];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n\n          case 2:\n            return [2\n            /*return*/\n            , null];\n        }\n      });\n    });\n  };\n\n  LongPollingTransport.prototype.updateHeaderToken = function (request, token) {\n    if (!request.headers) {\n      request.headers = {};\n    }\n\n    if (token) {\n      // tslint:disable-next-line:no-string-literal\n      request.headers[\"Authorization\"] = \"Bearer \" + token;\n      return;\n    } // tslint:disable-next-line:no-string-literal\n\n\n    if (request.headers[\"Authorization\"]) {\n      // tslint:disable-next-line:no-string-literal\n      delete request.headers[\"Authorization\"];\n    }\n  };\n\n  LongPollingTransport.prototype.poll = function (url, pollOptions) {\n    return __awaiter(this, void 0, void 0, function () {\n      var token, pollUrl, response, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0,, 8, 9]);\n\n            _a.label = 1;\n\n          case 1:\n            if (!this.running) return [3\n            /*break*/\n            , 7];\n            return [4\n            /*yield*/\n            , this.getAccessToken()];\n\n          case 2:\n            token = _a.sent();\n            this.updateHeaderToken(pollOptions, token);\n            _a.label = 3;\n\n          case 3:\n            _a.trys.push([3, 5,, 6]);\n\n            pollUrl = url + \"&_=\" + Date.now();\n            this.logger.log(LogLevel.Trace, \"(LongPolling transport) polling: \" + pollUrl + \".\");\n            return [4\n            /*yield*/\n            , this.httpClient.get(pollUrl, pollOptions)];\n\n          case 4:\n            response = _a.sent();\n\n            if (response.statusCode === 204) {\n              this.logger.log(LogLevel.Information, \"(LongPolling transport) Poll terminated by server.\");\n              this.running = false;\n            } else if (response.statusCode !== 200) {\n              this.logger.log(LogLevel.Error, \"(LongPolling transport) Unexpected response code: \" + response.statusCode + \".\"); // Unexpected status code\n\n              this.closeError = new HttpError(response.statusText || \"\", response.statusCode);\n              this.running = false;\n            } else {\n              // Process the response\n              if (response.content) {\n                this.logger.log(LogLevel.Trace, \"(LongPolling transport) data received. \" + getDataDetail(response.content, this.logMessageContent) + \".\");\n\n                if (this.onreceive) {\n                  this.onreceive(response.content);\n                }\n              } else {\n                // This is another way timeout manifest.\n                this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\n              }\n            }\n\n            return [3\n            /*break*/\n            , 6];\n\n          case 5:\n            e_1 = _a.sent();\n\n            if (!this.running) {\n              // Log but disregard errors that occur after stopping\n              this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll errored after shutdown: \" + e_1.message);\n            } else {\n              if (e_1 instanceof TimeoutError) {\n                // Ignore timeouts and reissue the poll.\n                this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\n              } else {\n                // Close the connection with the error as the result.\n                this.closeError = e_1;\n                this.running = false;\n              }\n            }\n\n            return [3\n            /*break*/\n            , 6];\n\n          case 6:\n            return [3\n            /*break*/\n            , 1];\n\n          case 7:\n            return [3\n            /*break*/\n            , 9];\n\n          case 8:\n            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Polling complete.\"); // We will reach here with pollAborted==false when the server returned a response causing the transport to stop.\n            // If pollAborted==true then client initiated the stop and the stop method will raise the close event after DELETE is sent.\n\n            if (!this.pollAborted) {\n              this.raiseOnClose();\n            }\n\n            return [7\n            /*endfinally*/\n            ];\n\n          case 9:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  LongPollingTransport.prototype.send = function (data) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (!this.running) {\n          return [2\n          /*return*/\n          , Promise.reject(new Error(\"Cannot send until the transport is connected\"))];\n        }\n\n        return [2\n        /*return*/\n        , sendMessage(this.logger, \"LongPolling\", this.httpClient, this.url, this.accessTokenFactory, data, this.logMessageContent)];\n      });\n    });\n  };\n\n  LongPollingTransport.prototype.stop = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var deleteOptions, token;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Stopping polling.\"); // Tell receiving loop to stop, abort any current request, and then wait for it to finish\n\n            this.running = false;\n            this.pollAbort.abort();\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1,, 5, 6]);\n\n            return [4\n            /*yield*/\n            , this.receiving];\n\n          case 2:\n            _a.sent(); // Send DELETE to clean up long polling on the server\n\n\n            this.logger.log(LogLevel.Trace, \"(LongPolling transport) sending DELETE request to \" + this.url + \".\");\n            deleteOptions = {\n              headers: {}\n            };\n            return [4\n            /*yield*/\n            , this.getAccessToken()];\n\n          case 3:\n            token = _a.sent();\n            this.updateHeaderToken(deleteOptions, token);\n            return [4\n            /*yield*/\n            , this.httpClient.delete(this.url, deleteOptions)];\n\n          case 4:\n            _a.sent();\n\n            this.logger.log(LogLevel.Trace, \"(LongPolling transport) DELETE request sent.\");\n            return [3\n            /*break*/\n            , 6];\n\n          case 5:\n            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Stop finished.\"); // Raise close event here instead of in polling\n            // It needs to happen after the DELETE request is sent\n\n            this.raiseOnClose();\n            return [7\n            /*endfinally*/\n            ];\n\n          case 6:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  LongPollingTransport.prototype.raiseOnClose = function () {\n    if (this.onclose) {\n      var logMessage = \"(LongPolling transport) Firing onclose event.\";\n\n      if (this.closeError) {\n        logMessage += \" Error: \" + this.closeError;\n      }\n\n      this.logger.log(LogLevel.Trace, logMessage);\n      this.onclose(this.closeError);\n    }\n  };\n\n  return LongPollingTransport;\n}();\n\nexport { LongPollingTransport };","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { LogLevel } from \"./ILogger\";\nimport { TransferFormat } from \"./ITransport\";\nimport { Arg, getDataDetail, sendMessage } from \"./Utils\";\n/** @private */\n\nvar ServerSentEventsTransport =\n/** @class */\nfunction () {\n  function ServerSentEventsTransport(httpClient, accessTokenFactory, logger, logMessageContent, eventSourceConstructor) {\n    this.httpClient = httpClient;\n    this.accessTokenFactory = accessTokenFactory;\n    this.logger = logger;\n    this.logMessageContent = logMessageContent;\n    this.eventSourceConstructor = eventSourceConstructor;\n    this.onreceive = null;\n    this.onclose = null;\n  }\n\n  ServerSentEventsTransport.prototype.connect = function (url, transferFormat) {\n    return __awaiter(this, void 0, void 0, function () {\n      var token;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            Arg.isRequired(url, \"url\");\n            Arg.isRequired(transferFormat, \"transferFormat\");\n            Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\n            this.logger.log(LogLevel.Trace, \"(SSE transport) Connecting.\"); // set url before accessTokenFactory because this.url is only for send and we set the auth header instead of the query string for send\n\n            this.url = url;\n            if (!this.accessTokenFactory) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.accessTokenFactory()];\n\n          case 1:\n            token = _a.sent();\n\n            if (token) {\n              url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + (\"access_token=\" + encodeURIComponent(token));\n            }\n\n            _a.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            , new Promise(function (resolve, reject) {\n              var opened = false;\n\n              if (transferFormat !== TransferFormat.Text) {\n                reject(new Error(\"The Server-Sent Events transport only supports the 'Text' transfer format\"));\n                return;\n              }\n\n              var eventSource;\n\n              if (typeof window !== \"undefined\") {\n                eventSource = new _this.eventSourceConstructor(url, {\n                  withCredentials: true\n                });\n              } else {\n                // Non-browser passes cookies via the dictionary\n                var cookies = _this.httpClient.getCookieString(url);\n\n                eventSource = new _this.eventSourceConstructor(url, {\n                  withCredentials: true,\n                  headers: {\n                    Cookie: cookies\n                  }\n                });\n              }\n\n              try {\n                eventSource.onmessage = function (e) {\n                  if (_this.onreceive) {\n                    try {\n                      _this.logger.log(LogLevel.Trace, \"(SSE transport) data received. \" + getDataDetail(e.data, _this.logMessageContent) + \".\");\n\n                      _this.onreceive(e.data);\n                    } catch (error) {\n                      _this.close(error);\n\n                      return;\n                    }\n                  }\n                };\n\n                eventSource.onerror = function (e) {\n                  var error = new Error(e.data || \"Error occurred\");\n\n                  if (opened) {\n                    _this.close(error);\n                  } else {\n                    reject(error);\n                  }\n                };\n\n                eventSource.onopen = function () {\n                  _this.logger.log(LogLevel.Information, \"SSE connected to \" + _this.url);\n\n                  _this.eventSource = eventSource;\n                  opened = true;\n                  resolve();\n                };\n              } catch (e) {\n                reject(e);\n                return;\n              }\n            })];\n        }\n      });\n    });\n  };\n\n  ServerSentEventsTransport.prototype.send = function (data) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (!this.eventSource) {\n          return [2\n          /*return*/\n          , Promise.reject(new Error(\"Cannot send until the transport is connected\"))];\n        }\n\n        return [2\n        /*return*/\n        , sendMessage(this.logger, \"SSE\", this.httpClient, this.url, this.accessTokenFactory, data, this.logMessageContent)];\n      });\n    });\n  };\n\n  ServerSentEventsTransport.prototype.stop = function () {\n    this.close();\n    return Promise.resolve();\n  };\n\n  ServerSentEventsTransport.prototype.close = function (e) {\n    if (this.eventSource) {\n      this.eventSource.close();\n      this.eventSource = undefined;\n\n      if (this.onclose) {\n        this.onclose(e);\n      }\n    }\n  };\n\n  return ServerSentEventsTransport;\n}();\n\nexport { ServerSentEventsTransport };","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { LogLevel } from \"./ILogger\";\nimport { TransferFormat } from \"./ITransport\";\nimport { Arg, getDataDetail } from \"./Utils\";\n/** @private */\n\nvar WebSocketTransport =\n/** @class */\nfunction () {\n  function WebSocketTransport(httpClient, accessTokenFactory, logger, logMessageContent, webSocketConstructor) {\n    this.logger = logger;\n    this.accessTokenFactory = accessTokenFactory;\n    this.logMessageContent = logMessageContent;\n    this.webSocketConstructor = webSocketConstructor;\n    this.httpClient = httpClient;\n    this.onreceive = null;\n    this.onclose = null;\n  }\n\n  WebSocketTransport.prototype.connect = function (url, transferFormat) {\n    return __awaiter(this, void 0, void 0, function () {\n      var token;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            Arg.isRequired(url, \"url\");\n            Arg.isRequired(transferFormat, \"transferFormat\");\n            Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\n            this.logger.log(LogLevel.Trace, \"(WebSockets transport) Connecting.\");\n            if (!this.accessTokenFactory) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.accessTokenFactory()];\n\n          case 1:\n            token = _a.sent();\n\n            if (token) {\n              url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + (\"access_token=\" + encodeURIComponent(token));\n            }\n\n            _a.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            , new Promise(function (resolve, reject) {\n              url = url.replace(/^http/, \"ws\");\n              var webSocket;\n\n              var cookies = _this.httpClient.getCookieString(url);\n\n              if (typeof window === \"undefined\" && cookies) {\n                // Only pass cookies when in non-browser environments\n                webSocket = new _this.webSocketConstructor(url, undefined, {\n                  headers: {\n                    Cookie: \"\" + cookies\n                  }\n                });\n              }\n\n              if (!webSocket) {\n                // Chrome is not happy with passing 'undefined' as protocol\n                webSocket = new _this.webSocketConstructor(url);\n              }\n\n              if (transferFormat === TransferFormat.Binary) {\n                webSocket.binaryType = \"arraybuffer\";\n              } // tslint:disable-next-line:variable-name\n\n\n              webSocket.onopen = function (_event) {\n                _this.logger.log(LogLevel.Information, \"WebSocket connected to \" + url + \".\");\n\n                _this.webSocket = webSocket;\n                resolve();\n              };\n\n              webSocket.onerror = function (event) {\n                var error = null; // ErrorEvent is a browser only type we need to check if the type exists before using it\n\n                if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\n                  error = event.error;\n                }\n\n                reject(error);\n              };\n\n              webSocket.onmessage = function (message) {\n                _this.logger.log(LogLevel.Trace, \"(WebSockets transport) data received. \" + getDataDetail(message.data, _this.logMessageContent) + \".\");\n\n                if (_this.onreceive) {\n                  _this.onreceive(message.data);\n                }\n              };\n\n              webSocket.onclose = function (event) {\n                return _this.close(event);\n              };\n            })];\n        }\n      });\n    });\n  };\n\n  WebSocketTransport.prototype.send = function (data) {\n    if (this.webSocket && this.webSocket.readyState === this.webSocketConstructor.OPEN) {\n      this.logger.log(LogLevel.Trace, \"(WebSockets transport) sending data. \" + getDataDetail(data, this.logMessageContent) + \".\");\n      this.webSocket.send(data);\n      return Promise.resolve();\n    }\n\n    return Promise.reject(\"WebSocket is not in the OPEN state\");\n  };\n\n  WebSocketTransport.prototype.stop = function () {\n    if (this.webSocket) {\n      // Clear websocket handlers because we are considering the socket closed now\n      this.webSocket.onclose = function () {};\n\n      this.webSocket.onmessage = function () {};\n\n      this.webSocket.onerror = function () {};\n\n      this.webSocket.close();\n      this.webSocket = undefined; // Manually invoke onclose callback inline so we know the HttpConnection was closed properly before returning\n      // This also solves an issue where websocket.onclose could take 18+ seconds to trigger during network disconnects\n\n      this.close(undefined);\n    }\n\n    return Promise.resolve();\n  };\n\n  WebSocketTransport.prototype.close = function (event) {\n    // webSocket will be null if the transport did not start successfully\n    this.logger.log(LogLevel.Trace, \"(WebSockets transport) socket closed.\");\n\n    if (this.onclose) {\n      if (event && (event.wasClean === false || event.code !== 1000)) {\n        this.onclose(new Error(\"WebSocket closed with status code: \" + event.code + \" (\" + event.reason + \").\"));\n      } else {\n        this.onclose();\n      }\n    }\n  };\n\n  return WebSocketTransport;\n}();\n\nexport { WebSocketTransport };","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { DefaultHttpClient } from \"./DefaultHttpClient\";\nimport { LogLevel } from \"./ILogger\";\nimport { HttpTransportType, TransferFormat } from \"./ITransport\";\nimport { LongPollingTransport } from \"./LongPollingTransport\";\nimport { ServerSentEventsTransport } from \"./ServerSentEventsTransport\";\nimport { Arg, createLogger } from \"./Utils\";\nimport { WebSocketTransport } from \"./WebSocketTransport\";\nvar MAX_REDIRECTS = 100;\nvar WebSocketModule = null;\nvar EventSourceModule = null;\n\nif (typeof window === \"undefined\" && typeof require !== \"undefined\") {\n  // In order to ignore the dynamic require in webpack builds we need to do this magic\n  // @ts-ignore: TS doesn't know about these names\n  var requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\n  WebSocketModule = requireFunc(\"ws\");\n  EventSourceModule = requireFunc(\"eventsource\");\n}\n/** @private */\n\n\nvar HttpConnection =\n/** @class */\nfunction () {\n  function HttpConnection(url, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.features = {};\n    Arg.isRequired(url, \"url\");\n    this.logger = createLogger(options.logger);\n    this.baseUrl = this.resolveUrl(url);\n    options = options || {};\n    options.logMessageContent = options.logMessageContent || false;\n    var isNode = typeof window === \"undefined\";\n\n    if (!isNode && typeof WebSocket !== \"undefined\" && !options.WebSocket) {\n      options.WebSocket = WebSocket;\n    } else if (isNode && !options.WebSocket) {\n      if (WebSocketModule) {\n        options.WebSocket = WebSocketModule;\n      }\n    }\n\n    if (!isNode && typeof EventSource !== \"undefined\" && !options.EventSource) {\n      options.EventSource = EventSource;\n    } else if (isNode && !options.EventSource) {\n      if (typeof EventSourceModule !== \"undefined\") {\n        options.EventSource = EventSourceModule;\n      }\n    }\n\n    this.httpClient = options.httpClient || new DefaultHttpClient(this.logger);\n    this.connectionState = 2\n    /* Disconnected */\n    ;\n    this.options = options;\n    this.onreceive = null;\n    this.onclose = null;\n  }\n\n  HttpConnection.prototype.start = function (transferFormat) {\n    transferFormat = transferFormat || TransferFormat.Binary;\n    Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\n    this.logger.log(LogLevel.Debug, \"Starting connection with transfer format '\" + TransferFormat[transferFormat] + \"'.\");\n\n    if (this.connectionState !== 2\n    /* Disconnected */\n    ) {\n        return Promise.reject(new Error(\"Cannot start a connection that is not in the 'Disconnected' state.\"));\n      }\n\n    this.connectionState = 0\n    /* Connecting */\n    ;\n    this.startPromise = this.startInternal(transferFormat);\n    return this.startPromise;\n  };\n\n  HttpConnection.prototype.send = function (data) {\n    if (this.connectionState !== 1\n    /* Connected */\n    ) {\n        throw new Error(\"Cannot send data if the connection is not in the 'Connected' State.\");\n      } // Transport will not be null if state is connected\n\n\n    return this.transport.send(data);\n  };\n\n  HttpConnection.prototype.stop = function (error) {\n    return __awaiter(this, void 0, void 0, function () {\n      var e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.connectionState = 2\n            /* Disconnected */\n            ; // Set error as soon as possible otherwise there is a race between\n            // the transport closing and providing an error and the error from a close message\n            // We would prefer the close message error.\n\n            this.stopError = error;\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this.startPromise];\n\n          case 2:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            e_1 = _a.sent();\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            if (!this.transport) return [3\n            /*break*/\n            , 6];\n            return [4\n            /*yield*/\n            , this.transport.stop()];\n\n          case 5:\n            _a.sent();\n\n            this.transport = undefined;\n            _a.label = 6;\n\n          case 6:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  HttpConnection.prototype.startInternal = function (transferFormat) {\n    return __awaiter(this, void 0, void 0, function () {\n      var url, negotiateResponse, redirects, _loop_1, this_1, state_1, e_2;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            url = this.baseUrl;\n            this.accessTokenFactory = this.options.accessTokenFactory;\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 12,, 13]);\n\n            if (!this.options.skipNegotiation) return [3\n            /*break*/\n            , 5];\n            if (!(this.options.transport === HttpTransportType.WebSockets)) return [3\n            /*break*/\n            , 3]; // No need to add a connection ID in this case\n\n            this.transport = this.constructTransport(HttpTransportType.WebSockets); // We should just call connect directly in this case.\n            // No fallback or negotiate in this case.\n\n            return [4\n            /*yield*/\n            , this.transport.connect(url, transferFormat)];\n\n          case 2:\n            // We should just call connect directly in this case.\n            // No fallback or negotiate in this case.\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            throw Error(\"Negotiation can only be skipped when using the WebSocket transport directly.\");\n\n          case 4:\n            return [3\n            /*break*/\n            , 11];\n\n          case 5:\n            negotiateResponse = null;\n            redirects = 0;\n\n            _loop_1 = function _loop_1() {\n              var accessToken_1;\n              return __generator(this, function (_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4\n                    /*yield*/\n                    , this_1.getNegotiationResponse(url)];\n\n                  case 1:\n                    negotiateResponse = _a.sent(); // the user tries to stop the connection when it is being started\n\n                    if (this_1.connectionState === 2\n                    /* Disconnected */\n                    ) {\n                        return [2\n                        /*return*/\n                        , {\n                          value: void 0\n                        }];\n                      }\n\n                    if (negotiateResponse.error) {\n                      throw Error(negotiateResponse.error);\n                    }\n\n                    if (negotiateResponse.ProtocolVersion) {\n                      throw Error(\"Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.\");\n                    }\n\n                    if (negotiateResponse.url) {\n                      url = negotiateResponse.url;\n                    }\n\n                    if (negotiateResponse.accessToken) {\n                      accessToken_1 = negotiateResponse.accessToken;\n\n                      this_1.accessTokenFactory = function () {\n                        return accessToken_1;\n                      };\n                    }\n\n                    redirects++;\n                    return [2\n                    /*return*/\n                    ];\n                }\n              });\n            };\n\n            this_1 = this;\n            _a.label = 6;\n\n          case 6:\n            return [5\n            /*yield**/\n            , _loop_1()];\n\n          case 7:\n            state_1 = _a.sent();\n            if (typeof state_1 === \"object\") return [2\n            /*return*/\n            , state_1.value];\n            _a.label = 8;\n\n          case 8:\n            if (negotiateResponse.url && redirects < MAX_REDIRECTS) return [3\n            /*break*/\n            , 6];\n            _a.label = 9;\n\n          case 9:\n            if (redirects === MAX_REDIRECTS && negotiateResponse.url) {\n              throw Error(\"Negotiate redirection limit exceeded.\");\n            }\n\n            return [4\n            /*yield*/\n            , this.createTransport(url, this.options.transport, negotiateResponse, transferFormat)];\n\n          case 10:\n            _a.sent();\n\n            _a.label = 11;\n\n          case 11:\n            if (this.transport instanceof LongPollingTransport) {\n              this.features.inherentKeepAlive = true;\n            }\n\n            this.transport.onreceive = this.onreceive;\n\n            this.transport.onclose = function (e) {\n              return _this.stopConnection(e);\n            }; // only change the state if we were connecting to not overwrite\n            // the state if the connection is already marked as Disconnected\n\n\n            this.changeState(0\n            /* Connecting */\n            , 1\n            /* Connected */\n            );\n            return [3\n            /*break*/\n            , 13];\n\n          case 12:\n            e_2 = _a.sent();\n            this.logger.log(LogLevel.Error, \"Failed to start the connection: \" + e_2);\n            this.connectionState = 2\n            /* Disconnected */\n            ;\n            this.transport = undefined;\n            throw e_2;\n\n          case 13:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  HttpConnection.prototype.getNegotiationResponse = function (url) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, headers, token, negotiateUrl, response, e_3;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!this.accessTokenFactory) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.accessTokenFactory()];\n\n          case 1:\n            token = _b.sent();\n\n            if (token) {\n              headers = (_a = {}, _a[\"Authorization\"] = \"Bearer \" + token, _a);\n            }\n\n            _b.label = 2;\n\n          case 2:\n            negotiateUrl = this.resolveNegotiateUrl(url);\n            this.logger.log(LogLevel.Debug, \"Sending negotiation request: \" + negotiateUrl + \".\");\n            _b.label = 3;\n\n          case 3:\n            _b.trys.push([3, 5,, 6]);\n\n            return [4\n            /*yield*/\n            , this.httpClient.post(negotiateUrl, {\n              content: \"\",\n              headers: headers\n            })];\n\n          case 4:\n            response = _b.sent();\n\n            if (response.statusCode !== 200) {\n              throw Error(\"Unexpected status code returned from negotiate \" + response.statusCode);\n            }\n\n            return [2\n            /*return*/\n            , JSON.parse(response.content)];\n\n          case 5:\n            e_3 = _b.sent();\n            this.logger.log(LogLevel.Error, \"Failed to complete negotiation with the server: \" + e_3);\n            throw e_3;\n\n          case 6:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  HttpConnection.prototype.createConnectUrl = function (url, connectionId) {\n    if (!connectionId) {\n      return url;\n    }\n\n    return url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + (\"id=\" + connectionId);\n  };\n\n  HttpConnection.prototype.createTransport = function (url, requestedTransport, negotiateResponse, requestedTransferFormat) {\n    return __awaiter(this, void 0, void 0, function () {\n      var connectUrl, transports, _i, transports_1, endpoint, transport, ex_1;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            connectUrl = this.createConnectUrl(url, negotiateResponse.connectionId);\n            if (!this.isITransport(requestedTransport)) return [3\n            /*break*/\n            , 2];\n            this.logger.log(LogLevel.Debug, \"Connection was provided an instance of ITransport, using that directly.\");\n            this.transport = requestedTransport;\n            return [4\n            /*yield*/\n            , this.transport.connect(connectUrl, requestedTransferFormat)];\n\n          case 1:\n            _a.sent(); // only change the state if we were connecting to not overwrite\n            // the state if the connection is already marked as Disconnected\n\n\n            this.changeState(0\n            /* Connecting */\n            , 1\n            /* Connected */\n            );\n            return [2\n            /*return*/\n            ];\n\n          case 2:\n            transports = negotiateResponse.availableTransports || [];\n            _i = 0, transports_1 = transports;\n            _a.label = 3;\n\n          case 3:\n            if (!(_i < transports_1.length)) return [3\n            /*break*/\n            , 9];\n            endpoint = transports_1[_i];\n            this.connectionState = 0\n            /* Connecting */\n            ;\n            transport = this.resolveTransport(endpoint, requestedTransport, requestedTransferFormat);\n            if (!(typeof transport === \"number\")) return [3\n            /*break*/\n            , 8];\n            this.transport = this.constructTransport(transport);\n            if (!!negotiateResponse.connectionId) return [3\n            /*break*/\n            , 5];\n            return [4\n            /*yield*/\n            , this.getNegotiationResponse(url)];\n\n          case 4:\n            negotiateResponse = _a.sent();\n            connectUrl = this.createConnectUrl(url, negotiateResponse.connectionId);\n            _a.label = 5;\n\n          case 5:\n            _a.trys.push([5, 7,, 8]);\n\n            return [4\n            /*yield*/\n            , this.transport.connect(connectUrl, requestedTransferFormat)];\n\n          case 6:\n            _a.sent();\n\n            this.changeState(0\n            /* Connecting */\n            , 1\n            /* Connected */\n            );\n            return [2\n            /*return*/\n            ];\n\n          case 7:\n            ex_1 = _a.sent();\n            this.logger.log(LogLevel.Error, \"Failed to start the transport '\" + HttpTransportType[transport] + \"': \" + ex_1);\n            this.connectionState = 2\n            /* Disconnected */\n            ;\n            negotiateResponse.connectionId = undefined;\n            return [3\n            /*break*/\n            , 8];\n\n          case 8:\n            _i++;\n            return [3\n            /*break*/\n            , 3];\n\n          case 9:\n            throw new Error(\"Unable to initialize any of the available transports.\");\n        }\n      });\n    });\n  };\n\n  HttpConnection.prototype.constructTransport = function (transport) {\n    switch (transport) {\n      case HttpTransportType.WebSockets:\n        if (!this.options.WebSocket) {\n          throw new Error(\"'WebSocket' is not supported in your environment.\");\n        }\n\n        return new WebSocketTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false, this.options.WebSocket);\n\n      case HttpTransportType.ServerSentEvents:\n        if (!this.options.EventSource) {\n          throw new Error(\"'EventSource' is not supported in your environment.\");\n        }\n\n        return new ServerSentEventsTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false, this.options.EventSource);\n\n      case HttpTransportType.LongPolling:\n        return new LongPollingTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false);\n\n      default:\n        throw new Error(\"Unknown transport: \" + transport + \".\");\n    }\n  };\n\n  HttpConnection.prototype.resolveTransport = function (endpoint, requestedTransport, requestedTransferFormat) {\n    var transport = HttpTransportType[endpoint.transport];\n\n    if (transport === null || transport === undefined) {\n      this.logger.log(LogLevel.Debug, \"Skipping transport '\" + endpoint.transport + \"' because it is not supported by this client.\");\n    } else {\n      var transferFormats = endpoint.transferFormats.map(function (s) {\n        return TransferFormat[s];\n      });\n\n      if (transportMatches(requestedTransport, transport)) {\n        if (transferFormats.indexOf(requestedTransferFormat) >= 0) {\n          if (transport === HttpTransportType.WebSockets && !this.options.WebSocket || transport === HttpTransportType.ServerSentEvents && !this.options.EventSource) {\n            this.logger.log(LogLevel.Debug, \"Skipping transport '\" + HttpTransportType[transport] + \"' because it is not supported in your environment.'\");\n          } else {\n            this.logger.log(LogLevel.Debug, \"Selecting transport '\" + HttpTransportType[transport] + \"'.\");\n            return transport;\n          }\n        } else {\n          this.logger.log(LogLevel.Debug, \"Skipping transport '\" + HttpTransportType[transport] + \"' because it does not support the requested transfer format '\" + TransferFormat[requestedTransferFormat] + \"'.\");\n        }\n      } else {\n        this.logger.log(LogLevel.Debug, \"Skipping transport '\" + HttpTransportType[transport] + \"' because it was disabled by the client.\");\n      }\n    }\n\n    return null;\n  };\n\n  HttpConnection.prototype.isITransport = function (transport) {\n    return transport && typeof transport === \"object\" && \"connect\" in transport;\n  };\n\n  HttpConnection.prototype.changeState = function (from, to) {\n    if (this.connectionState === from) {\n      this.connectionState = to;\n      return true;\n    }\n\n    return false;\n  };\n\n  HttpConnection.prototype.stopConnection = function (error) {\n    this.transport = undefined; // If we have a stopError, it takes precedence over the error from the transport\n\n    error = this.stopError || error;\n\n    if (error) {\n      this.logger.log(LogLevel.Error, \"Connection disconnected with error '\" + error + \"'.\");\n    } else {\n      this.logger.log(LogLevel.Information, \"Connection disconnected.\");\n    }\n\n    this.connectionState = 2\n    /* Disconnected */\n    ;\n\n    if (this.onclose) {\n      this.onclose(error);\n    }\n  };\n\n  HttpConnection.prototype.resolveUrl = function (url) {\n    // startsWith is not supported in IE\n    if (url.lastIndexOf(\"https://\", 0) === 0 || url.lastIndexOf(\"http://\", 0) === 0) {\n      return url;\n    }\n\n    if (typeof window === \"undefined\" || !window || !window.document) {\n      throw new Error(\"Cannot resolve '\" + url + \"'.\");\n    } // Setting the url to the href propery of an anchor tag handles normalization\n    // for us. There are 3 main cases.\n    // 1. Relative  path normalization e.g \"b\" -> \"http://localhost:5000/a/b\"\n    // 2. Absolute path normalization e.g \"/a/b\" -> \"http://localhost:5000/a/b\"\n    // 3. Networkpath reference normalization e.g \"//localhost:5000/a/b\" -> \"http://localhost:5000/a/b\"\n\n\n    var aTag = window.document.createElement(\"a\");\n    aTag.href = url;\n    this.logger.log(LogLevel.Information, \"Normalizing '\" + url + \"' to '\" + aTag.href + \"'.\");\n    return aTag.href;\n  };\n\n  HttpConnection.prototype.resolveNegotiateUrl = function (url) {\n    var index = url.indexOf(\"?\");\n    var negotiateUrl = url.substring(0, index === -1 ? url.length : index);\n\n    if (negotiateUrl[negotiateUrl.length - 1] !== \"/\") {\n      negotiateUrl += \"/\";\n    }\n\n    negotiateUrl += \"negotiate\";\n    negotiateUrl += index === -1 ? \"\" : url.substring(index);\n    return negotiateUrl;\n  };\n\n  return HttpConnection;\n}();\n\nexport { HttpConnection };\n\nfunction transportMatches(requestedTransport, actualTransport) {\n  return !requestedTransport || (actualTransport & requestedTransport) !== 0;\n}","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nimport { MessageType } from \"./IHubProtocol\";\nimport { LogLevel } from \"./ILogger\";\nimport { TransferFormat } from \"./ITransport\";\nimport { NullLogger } from \"./Loggers\";\nimport { TextMessageFormat } from \"./TextMessageFormat\";\nvar JSON_HUB_PROTOCOL_NAME = \"json\";\n/** Implements the JSON Hub Protocol. */\n\nvar JsonHubProtocol =\n/** @class */\nfunction () {\n  function JsonHubProtocol() {\n    /** @inheritDoc */\n    this.name = JSON_HUB_PROTOCOL_NAME;\n    /** @inheritDoc */\n\n    this.version = 1;\n    /** @inheritDoc */\n\n    this.transferFormat = TransferFormat.Text;\n  }\n  /** Creates an array of {@link @aspnet/signalr.HubMessage} objects from the specified serialized representation.\r\n   *\r\n   * @param {string} input A string containing the serialized representation.\r\n   * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n   */\n\n\n  JsonHubProtocol.prototype.parseMessages = function (input, logger) {\n    // The interface does allow \"ArrayBuffer\" to be passed in, but this implementation does not. So let's throw a useful error.\n    if (typeof input !== \"string\") {\n      throw new Error(\"Invalid input for JSON hub protocol. Expected a string.\");\n    }\n\n    if (!input) {\n      return [];\n    }\n\n    if (logger === null) {\n      logger = NullLogger.instance;\n    } // Parse the messages\n\n\n    var messages = TextMessageFormat.parse(input);\n    var hubMessages = [];\n\n    for (var _i = 0, messages_1 = messages; _i < messages_1.length; _i++) {\n      var message = messages_1[_i];\n      var parsedMessage = JSON.parse(message);\n\n      if (typeof parsedMessage.type !== \"number\") {\n        throw new Error(\"Invalid payload.\");\n      }\n\n      switch (parsedMessage.type) {\n        case MessageType.Invocation:\n          this.isInvocationMessage(parsedMessage);\n          break;\n\n        case MessageType.StreamItem:\n          this.isStreamItemMessage(parsedMessage);\n          break;\n\n        case MessageType.Completion:\n          this.isCompletionMessage(parsedMessage);\n          break;\n\n        case MessageType.Ping:\n          // Single value, no need to validate\n          break;\n\n        case MessageType.Close:\n          // All optional values, no need to validate\n          break;\n\n        default:\n          // Future protocol changes can add message types, old clients can ignore them\n          logger.log(LogLevel.Information, \"Unknown message type '\" + parsedMessage.type + \"' ignored.\");\n          continue;\n      }\n\n      hubMessages.push(parsedMessage);\n    }\n\n    return hubMessages;\n  };\n  /** Writes the specified {@link @aspnet/signalr.HubMessage} to a string and returns it.\r\n   *\r\n   * @param {HubMessage} message The message to write.\r\n   * @returns {string} A string containing the serialized representation of the message.\r\n   */\n\n\n  JsonHubProtocol.prototype.writeMessage = function (message) {\n    return TextMessageFormat.write(JSON.stringify(message));\n  };\n\n  JsonHubProtocol.prototype.isInvocationMessage = function (message) {\n    this.assertNotEmptyString(message.target, \"Invalid payload for Invocation message.\");\n\n    if (message.invocationId !== undefined) {\n      this.assertNotEmptyString(message.invocationId, \"Invalid payload for Invocation message.\");\n    }\n  };\n\n  JsonHubProtocol.prototype.isStreamItemMessage = function (message) {\n    this.assertNotEmptyString(message.invocationId, \"Invalid payload for StreamItem message.\");\n\n    if (message.item === undefined) {\n      throw new Error(\"Invalid payload for StreamItem message.\");\n    }\n  };\n\n  JsonHubProtocol.prototype.isCompletionMessage = function (message) {\n    if (message.result && message.error) {\n      throw new Error(\"Invalid payload for Completion message.\");\n    }\n\n    if (!message.result && message.error) {\n      this.assertNotEmptyString(message.error, \"Invalid payload for Completion message.\");\n    }\n\n    this.assertNotEmptyString(message.invocationId, \"Invalid payload for Completion message.\");\n  };\n\n  JsonHubProtocol.prototype.assertNotEmptyString = function (value, errorMessage) {\n    if (typeof value !== \"string\" || value === \"\") {\n      throw new Error(errorMessage);\n    }\n  };\n\n  return JsonHubProtocol;\n}();\n\nexport { JsonHubProtocol };","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nimport { HttpConnection } from \"./HttpConnection\";\nimport { HubConnection } from \"./HubConnection\";\nimport { JsonHubProtocol } from \"./JsonHubProtocol\";\nimport { NullLogger } from \"./Loggers\";\nimport { Arg, ConsoleLogger } from \"./Utils\";\n/** A builder for configuring {@link @aspnet/signalr.HubConnection} instances. */\n\nvar HubConnectionBuilder =\n/** @class */\nfunction () {\n  function HubConnectionBuilder() {}\n\n  HubConnectionBuilder.prototype.configureLogging = function (logging) {\n    Arg.isRequired(logging, \"logging\");\n\n    if (isLogger(logging)) {\n      this.logger = logging;\n    } else {\n      this.logger = new ConsoleLogger(logging);\n    }\n\n    return this;\n  };\n\n  HubConnectionBuilder.prototype.withUrl = function (url, transportTypeOrOptions) {\n    Arg.isRequired(url, \"url\");\n    this.url = url; // Flow-typing knows where it's at. Since HttpTransportType is a number and IHttpConnectionOptions is guaranteed\n    // to be an object, we know (as does TypeScript) this comparison is all we need to figure out which overload was called.\n\n    if (typeof transportTypeOrOptions === \"object\") {\n      this.httpConnectionOptions = transportTypeOrOptions;\n    } else {\n      this.httpConnectionOptions = {\n        transport: transportTypeOrOptions\n      };\n    }\n\n    return this;\n  };\n  /** Configures the {@link @aspnet/signalr.HubConnection} to use the specified Hub Protocol.\r\n   *\r\n   * @param {IHubProtocol} protocol The {@link @aspnet/signalr.IHubProtocol} implementation to use.\r\n   */\n\n\n  HubConnectionBuilder.prototype.withHubProtocol = function (protocol) {\n    Arg.isRequired(protocol, \"protocol\");\n    this.protocol = protocol;\n    return this;\n  };\n  /** Creates a {@link @aspnet/signalr.HubConnection} from the configuration options specified in this builder.\r\n   *\r\n   * @returns {HubConnection} The configured {@link @aspnet/signalr.HubConnection}.\r\n   */\n\n\n  HubConnectionBuilder.prototype.build = function () {\n    // If httpConnectionOptions has a logger, use it. Otherwise, override it with the one\n    // provided to configureLogger\n    var httpConnectionOptions = this.httpConnectionOptions || {}; // If it's 'null', the user **explicitly** asked for null, don't mess with it.\n\n    if (httpConnectionOptions.logger === undefined) {\n      // If our logger is undefined or null, that's OK, the HttpConnection constructor will handle it.\n      httpConnectionOptions.logger = this.logger;\n    } // Now create the connection\n\n\n    if (!this.url) {\n      throw new Error(\"The 'HubConnectionBuilder.withUrl' method must be called before building the connection.\");\n    }\n\n    var connection = new HttpConnection(this.url, httpConnectionOptions);\n    return HubConnection.create(connection, this.logger || NullLogger.instance, this.protocol || new JsonHubProtocol());\n  };\n\n  return HubConnectionBuilder;\n}();\n\nexport { HubConnectionBuilder };\n\nfunction isLogger(logger) {\n  return logger.log !== undefined;\n}","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n// Version token that will be replaced by the prepack command\n\n/** The version of the SignalR client. */\nexport var VERSION = \"1.1.4\";\nexport { AbortError, HttpError, TimeoutError } from \"./Errors\";\nexport { HttpClient, HttpResponse } from \"./HttpClient\";\nexport { DefaultHttpClient } from \"./DefaultHttpClient\";\nexport { HubConnection, HubConnectionState } from \"./HubConnection\";\nexport { HubConnectionBuilder } from \"./HubConnectionBuilder\";\nexport { MessageType } from \"./IHubProtocol\";\nexport { LogLevel } from \"./ILogger\";\nexport { HttpTransportType, TransferFormat } from \"./ITransport\";\nexport { NullLogger } from \"./Loggers\";\nexport { JsonHubProtocol } from \"./JsonHubProtocol\";","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n// Not exported from index\n\n/** @private */\nvar TextMessageFormat =\n/** @class */\nfunction () {\n  function TextMessageFormat() {}\n\n  TextMessageFormat.write = function (output) {\n    return \"\" + output + TextMessageFormat.RecordSeparator;\n  };\n\n  TextMessageFormat.parse = function (input) {\n    if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {\n      throw new Error(\"Message is incomplete.\");\n    }\n\n    var messages = input.split(TextMessageFormat.RecordSeparator);\n    messages.pop();\n    return messages;\n  };\n\n  TextMessageFormat.RecordSeparatorCode = 0x1e;\n  TextMessageFormat.RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);\n  return TextMessageFormat;\n}();\n\nexport { TextMessageFormat };","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) {\n      if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n  }\n\n  return t;\n};\n\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\nimport { LogLevel } from \"./ILogger\";\nimport { isArrayBuffer } from \"./Utils\";\nvar requestModule;\n\nif (typeof XMLHttpRequest === \"undefined\") {\n  // In order to ignore the dynamic require in webpack builds we need to do this magic\n  // @ts-ignore: TS doesn't know about these names\n  var requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\n  requestModule = requireFunc(\"request\");\n}\n\nvar NodeHttpClient =\n/** @class */\nfunction (_super) {\n  __extends(NodeHttpClient, _super);\n\n  function NodeHttpClient(logger) {\n    var _this = _super.call(this) || this;\n\n    if (typeof requestModule === \"undefined\") {\n      throw new Error(\"The 'request' module could not be loaded.\");\n    }\n\n    _this.logger = logger;\n    _this.cookieJar = requestModule.jar();\n    _this.request = requestModule.defaults({\n      jar: _this.cookieJar\n    });\n    return _this;\n  }\n\n  NodeHttpClient.prototype.send = function (httpRequest) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      var requestBody;\n\n      if (isArrayBuffer(httpRequest.content)) {\n        requestBody = Buffer.from(httpRequest.content);\n      } else {\n        requestBody = httpRequest.content || \"\";\n      }\n\n      var currentRequest = _this.request(httpRequest.url, {\n        body: requestBody,\n        // If binary is expected 'null' should be used, otherwise for text 'utf8'\n        encoding: httpRequest.responseType === \"arraybuffer\" ? null : \"utf8\",\n        headers: __assign({\n          // Tell auth middleware to 401 instead of redirecting\n          \"X-Requested-With\": \"XMLHttpRequest\"\n        }, httpRequest.headers),\n        method: httpRequest.method,\n        timeout: httpRequest.timeout\n      }, function (error, response, body) {\n        if (httpRequest.abortSignal) {\n          httpRequest.abortSignal.onabort = null;\n        }\n\n        if (error) {\n          if (error.code === \"ETIMEDOUT\") {\n            _this.logger.log(LogLevel.Warning, \"Timeout from HTTP request.\");\n\n            reject(new TimeoutError());\n          }\n\n          _this.logger.log(LogLevel.Warning, \"Error from HTTP request. \" + error);\n\n          reject(error);\n          return;\n        }\n\n        if (response.statusCode >= 200 && response.statusCode < 300) {\n          resolve(new HttpResponse(response.statusCode, response.statusMessage || \"\", body));\n        } else {\n          reject(new HttpError(response.statusMessage || \"\", response.statusCode || 0));\n        }\n      });\n\n      if (httpRequest.abortSignal) {\n        httpRequest.abortSignal.onabort = function () {\n          currentRequest.abort();\n          reject(new AbortError());\n        };\n      }\n    });\n  };\n\n  NodeHttpClient.prototype.getCookieString = function (url) {\n    return this.cookieJar.getCookieString(url);\n  };\n\n  return NodeHttpClient;\n}(HttpClient);\n\nexport { NodeHttpClient };","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nimport { TextMessageFormat } from \"./TextMessageFormat\";\nimport { isArrayBuffer } from \"./Utils\";\n/** @private */\n\nvar HandshakeProtocol =\n/** @class */\nfunction () {\n  function HandshakeProtocol() {} // Handshake request is always JSON\n\n\n  HandshakeProtocol.prototype.writeHandshakeRequest = function (handshakeRequest) {\n    return TextMessageFormat.write(JSON.stringify(handshakeRequest));\n  };\n\n  HandshakeProtocol.prototype.parseHandshakeResponse = function (data) {\n    var responseMessage;\n    var messageData;\n    var remainingData;\n\n    if (isArrayBuffer(data) || typeof Buffer !== \"undefined\" && data instanceof Buffer) {\n      // Format is binary but still need to read JSON text from handshake response\n      var binaryData = new Uint8Array(data);\n      var separatorIndex = binaryData.indexOf(TextMessageFormat.RecordSeparatorCode);\n\n      if (separatorIndex === -1) {\n        throw new Error(\"Message is incomplete.\");\n      } // content before separator is handshake response\n      // optional content after is additional messages\n\n\n      var responseLength = separatorIndex + 1;\n      messageData = String.fromCharCode.apply(null, binaryData.slice(0, responseLength));\n      remainingData = binaryData.byteLength > responseLength ? binaryData.slice(responseLength).buffer : null;\n    } else {\n      var textData = data;\n      var separatorIndex = textData.indexOf(TextMessageFormat.RecordSeparator);\n\n      if (separatorIndex === -1) {\n        throw new Error(\"Message is incomplete.\");\n      } // content before separator is handshake response\n      // optional content after is additional messages\n\n\n      var responseLength = separatorIndex + 1;\n      messageData = textData.substring(0, responseLength);\n      remainingData = textData.length > responseLength ? textData.substring(responseLength) : null;\n    } // At this point we should have just the single handshake message\n\n\n    var messages = TextMessageFormat.parse(messageData);\n    var response = JSON.parse(messages[0]);\n\n    if (response.type) {\n      throw new Error(\"Expected a handshake response from the server.\");\n    }\n\n    responseMessage = response; // multiple messages could have arrived with handshake\n    // return additional data to be parsed as usual, or null if all parsed\n\n    return [remainingData, responseMessage];\n  };\n\n  return HandshakeProtocol;\n}();\n\nexport { HandshakeProtocol };"],"sourceRoot":""}