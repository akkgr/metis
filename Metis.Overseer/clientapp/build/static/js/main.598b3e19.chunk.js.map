{"version":3,"sources":["assets/logo.png","services/storage.js","contexts/LayoutProvider.js","components/layouts/WebUnauthorized.js","components/layouts/WebSidebar.js","components/layouts/WebAuthorized.js","components/layouts/MobileAuthorized.js","components/layouts/MobileUnauthorized.js","App.js","serviceWorker.js","index.js","contexts/AuthProvider.js"],"names":["module","exports","__webpack_require__","p","storage","prefix","process","REACT_APP_STORAGE_PREFIX","get","key","value","localStorage","getItem","JSON","parse","set","setItem","stringify","remove","removeItem","LayoutContext","createContext","LayoutProvider","_ref","children","auth","useAuth","_useState","useState","view","window","innerWidth","isAuthenticated","_useState2","Object","slicedToArray","layout","setLayout","useEffect","handleResize","prevLayout","objectSpread","addEventListener","removeEventListener","react_default","a","createElement","Provider","Login","lazy","Promise","all","e","then","bind","WebUnauthorized","style","height","react","fallback","react_router","exact","path","component","to","items","icon","caption","Sidebar","es_layout","Sider","collapsed","display","flexDirection","alignItems","margin","avatar","size","src","logo","alt","className","menu","selectable","mode","map","item","Item","react_router_dom","type","flexGrow","backgroundColor","onClick","signOut","justifySelf","Map","LogBooks","LogBook","WebAuthorized","overflow","WebSidebar","Content","MobileAuthorized","MobileUnauthorized","withRouter","useContext","Layout","layouts_WebAuthorized","layouts_WebUnauthorized","layouts_MobileAuthorized","layouts_MobileUnauthorized","Boolean","location","hostname","match","Root","AuthProvider","contexts_LayoutProvider","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","AuthContext","React","props","token","session","getSession","jwt","decode","username","exp","Date","valueOf","isExpired","D_github_metis_Metis_Web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setIsAuthenticated","react__WEBPACK_IMPORTED_MODULE_1___default","signIn"],"mappings":"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","file":"static/js/main.598b3e19.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.767649f2.png\";","const storage = {\r\n  prefix: process.env.REACT_APP_STORAGE_PREFIX || '',\r\n  get: key => {\r\n    const value = localStorage.getItem(storage.prefix + key)\r\n    return JSON.parse(value)\r\n  },\r\n  set: (key, value) => {\r\n    return localStorage.setItem(storage.prefix + key, JSON.stringify(value))\r\n  },\r\n  remove: key => {\r\n    localStorage.removeItem(storage.prefix + key)\r\n  }\r\n}\r\n\r\nexport default storage\r\n","import React, { createContext, useContext, useState, useEffect } from 'react'\r\nimport { useAuth } from './AuthProvider'\r\n\r\nconst BREAKPOINT = 800\r\n\r\nconst LayoutContext = createContext(null)\r\n\r\nconst LayoutProvider = ({ children }) => {\r\n  const auth = useAuth()\r\n  const [layout, setLayout] = useState({\r\n    view: window.innerWidth > BREAKPOINT ? 'web' : 'mobile',\r\n    auth: auth.isAuthenticated\r\n  })\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      if (window.innerWidth <= BREAKPOINT && layout.view !== 'mobile') {\r\n        setLayout(prevLayout => ({ ...prevLayout, view: 'mobile' }))\r\n      }\r\n      if (window.innerWidth > BREAKPOINT && layout.view !== 'web') {\r\n        setLayout(prevLayout => ({ ...prevLayout, view: 'web' }))\r\n      }\r\n    }\r\n    window.addEventListener('resize', handleResize)\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize)\r\n    }\r\n  }, [layout])\r\n\r\n  useEffect(() => {\r\n    setLayout(prevLayout => ({ ...prevLayout, auth: auth.isAuthenticated }))\r\n  }, [auth.isAuthenticated])\r\n\r\n  return (\r\n    <LayoutContext.Provider value={layout}>{children}</LayoutContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useLayout = () => useContext(LayoutContext)\r\n\r\nexport default LayoutProvider\r\n","import React, { lazy, Suspense } from 'react'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\n\r\nconst Login = lazy(() => import('../login/Login'))\r\n\r\nconst WebUnauthorized = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: '100%'\r\n      }}>\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <Switch>\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Redirect to=\"/login\" />\r\n        </Switch>\r\n      </Suspense>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WebUnauthorized\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport {\r\n  Layout as AntdLayout,\r\n  Menu as AntdMenu,\r\n  Icon as AntdIcon,\r\n  Avatar as AntdAvatar\r\n} from 'antd'\r\nimport { useAuth } from '../../contexts/AuthProvider'\r\nimport logo from '../../assets/logo.png'\r\nimport './sidebar.less'\r\n\r\nconst VERSION = process.env.REACT_APP_VERSION\r\n\r\nconst items = [\r\n  {\r\n    path: '/map',\r\n    icon: 'global',\r\n    caption: 'Χάρτης'\r\n  },\r\n  {\r\n    path: '/logbooks',\r\n    icon: 'notification',\r\n    caption: 'Συμβάντα'\r\n  }\r\n]\r\n\r\nconst Sidebar = () => {\r\n  const auth = useAuth()\r\n  return (\r\n    <AntdLayout.Sider collapsed={true}>\r\n      <div style={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            margin: '20px 0px 60px 0px'\r\n          }}>\r\n          <AntdAvatar size={48} src={logo} alt=\"metis\" />\r\n          <span className=\"sidebar-version\">{VERSION}</span>\r\n        </div>\r\n\r\n        <AntdMenu selectable={false} mode=\"vertical\" className=\"sidebar-menu\">\r\n          {items.map(item => (\r\n            <AntdMenu.Item key={item.path} className=\"sidebar-menu-item\">\r\n              <NavLink to={item.path}>\r\n                <AntdIcon type={item.icon} />\r\n                <span>{item.caption}</span>\r\n              </NavLink>\r\n            </AntdMenu.Item>\r\n          ))}\r\n        </AntdMenu>\r\n        <div style={{ flexGrow: '1' }} />\r\n        <AntdMenu\r\n          selectable={false}\r\n          mode=\"vertical\"\r\n          style={{ backgroundColor: 'unset' }}\r\n          className=\"sidebar-menu\">\r\n          <AntdMenu.Item\r\n            key=\"/logout\"\r\n            onClick={auth.signOut}\r\n            style={{ justifySelf: 'flex-end' }}\r\n            className=\"sidebar-logout\">\r\n            <span>\r\n              <AntdIcon type=\"logout\" />\r\n              <span>Αποσύνδεση</span>\r\n            </span>\r\n          </AntdMenu.Item>\r\n        </AntdMenu>\r\n      </div>\r\n    </AntdLayout.Sider>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { lazy, Suspense } from 'react'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport { Layout as AntdLayout } from 'antd'\r\nimport WebSidebar from './WebSidebar'\r\n\r\nconst Map = lazy(() => import('../map/WebMapLayout'))\r\nconst LogBooks = lazy(() => import('../logBooks/LogBooks'))\r\nconst LogBook = lazy(() => import('../logBook/LogBook'))\r\n\r\nconst WebAuthorized = () => {\r\n  return (\r\n    <div style={{ height: '100vh', overflow: 'hidden' }}>\r\n      <AntdLayout>\r\n        <WebSidebar />\r\n        <AntdLayout.Content style={{ height: '100vh' }}>\r\n          <Suspense fallback={<div>Loading...</div>}>\r\n            <Switch>\r\n              <Route exact path=\"/map\" component={Map} />\r\n              <Route exact path=\"/logbooks\" component={LogBooks} />\r\n              <Route exact path=\"/logbooks/:id\" component={LogBook} />\r\n              <Redirect to=\"/map\" />\r\n            </Switch>\r\n          </Suspense>\r\n        </AntdLayout.Content>\r\n      </AntdLayout>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WebAuthorized\r\n","import React, { lazy, Suspense } from 'react'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport { Layout as AntdLayout } from 'antd'\r\n\r\nconst Map = lazy(() => import('../map/MobileMapLayout'))\r\nconst LogBooks = lazy(() => import('../logBooks/LogBooks'))\r\nconst LogBook = lazy(() => import('../logBook/LogBook'))\r\n\r\nconst MobileAuthorized = () => {\r\n  return (\r\n    <div style={{ height: '100vh', overflow: 'hidden' }}>\r\n      <AntdLayout>\r\n        <AntdLayout.Content style={{ height: '100vh' }}>\r\n          <Suspense fallback={<div>Loading...</div>}>\r\n            <Switch>\r\n              <Route exact path=\"/map\" component={Map} />\r\n              <Route exact path=\"/logbooks\" component={LogBooks} />\r\n              <Route exact path=\"/logbooks/:id\" component={LogBook} />\r\n              <Redirect to=\"/map\" />\r\n            </Switch>\r\n          </Suspense>\r\n        </AntdLayout.Content>\r\n      </AntdLayout>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MobileAuthorized\r\n","import React, { lazy, Suspense } from 'react'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\n\r\nconst Login = lazy(() => import('../login/Login'))\r\n\r\nconst MobileUnauthorized = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: '100%'\r\n      }}>\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <Switch>\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Redirect to=\"/login\" />\r\n        </Switch>\r\n      </Suspense>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MobileUnauthorized\r\n","import React, { useState, useEffect } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { useLayout } from './contexts/LayoutProvider'\r\nimport WebUnauthorized from './components/layouts/WebUnauthorized'\r\nimport WebAuthorized from './components/layouts/WebAuthorized'\r\nimport MobileAuthorized from './components/layouts/MobileAuthorized'\r\nimport MobileUnauthorized from './components/layouts/MobileUnauthorized'\r\n\r\nconst App = () => {\r\n  const layout = useLayout()\r\n\r\n  const [Layout, setLayout] = useState(<div />)\r\n\r\n  useEffect(() => {\r\n    const LayoutSelector = () => {\r\n      if (layout.view === 'web') {\r\n        return layout.auth ? <WebAuthorized /> : <WebUnauthorized />\r\n      }\r\n      return layout.auth ? <MobileAuthorized /> : <MobileUnauthorized />\r\n    }\r\n    setLayout(<LayoutSelector />)\r\n  }, [layout])\r\n\r\n  return Layout\r\n}\r\n\r\nexport default withRouter(App)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './App'\r\nimport AuthProvider from './contexts/AuthProvider'\r\nimport LayoutProvider from './contexts/LayoutProvider'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport './styles/index.less'\r\n\r\nconst Root = (\r\n  <BrowserRouter>\r\n    <AuthProvider>\r\n      <LayoutProvider>\r\n        <App />\r\n      </LayoutProvider>\r\n    </AuthProvider>\r\n  </BrowserRouter>\r\n)\r\n\r\nReactDOM.render(Root, document.getElementById('root'))\r\n\r\nserviceWorker.unregister()\r\n","import React, { useState, useContext } from 'react'\r\nimport jwt from 'jsonwebtoken'\r\nimport storage from '../services/storage'\r\n\r\nconst tokenSuffix = 'token'\r\nconst sessionSuffix = 'auth'\r\n\r\nconst AuthContext = React.createContext(null)\r\n\r\nconst AuthProvider = props => {\r\n  const token = storage.get(tokenSuffix)\r\n  let session = storage.get(sessionSuffix)\r\n  const getSession = () => {\r\n    if (!session && token) {\r\n      session = jwt.decode(token)\r\n      storage.set(sessionSuffix, session)\r\n    }\r\n    return session\r\n  }\r\n  const isExpired = () => {\r\n    const session = getSession()\r\n    const expired = session && session.exp * 1000 < new Date().valueOf()\r\n    return expired\r\n  }\r\n  const initAuthentication = () => {\r\n    session = getSession()\r\n    const check = session && session.username && !isExpired()\r\n    return check\r\n  }\r\n  const signIn = token => {\r\n    const session = jwt.decode(token)\r\n    storage.set(tokenSuffix, token)\r\n    storage.set(sessionSuffix, session)\r\n    setIsAuthenticated(true)\r\n  }\r\n  const signOut = () => {\r\n    storage.remove(tokenSuffix)\r\n    storage.remove(sessionSuffix)\r\n    setIsAuthenticated(false)\r\n  }\r\n  const [isAuthenticated, setIsAuthenticated] = useState(initAuthentication())\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, signIn, signOut }}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useAuth = () => useContext(AuthContext)\r\n\r\nexport default AuthProvider\r\n"],"sourceRoot":""}