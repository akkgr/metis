{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/antd/es/notification/style/index.js","../node_modules/rc-notification/es/Notice.js","../node_modules/rc-notification/es/Notification.js","../node_modules/rc-notification/es/index.js","../node_modules/antd/es/notification/index.js","../node_modules/babel-preset-react-app/node_modules/regenerator-runtime/runtime.js"],"names":["module","exports","__webpack_require__","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","d","__webpack_exports__","Notice_Notice","_Component","Notice","_ref","_temp","_this","_ret","classCallCheck_default","_len","length","Array","_key","possibleConstructorReturn_default","__proto__","Object","getPrototypeOf","call","concat","close","e","stopPropagation","clearCloseTimer","props","onClose","startCloseTimer","duration","closeTimer","setTimeout","clearTimeout","inherits_default","createClass_default","prevProps","update","restartCloseTimer","_className","componentClass","prefixCls","className","defineProperty_default","closable","react_default","a","createElement","classnames_default","style","onMouseEnter","onMouseLeave","onClick","children","tabIndex","closeIcon","react","propTypes","prop_types_default","number","func","any","bool","node","defaultProps","onEnd","right","es_Notice","seed","now","Date","Notification_Notification","Notification","state","notices","add","notice","maxCount","setState","previousState","noticeIndex","map","v","indexOf","updatedNotices","splice","updateKey","shift","push","remove","filter","transitionName","animation","_this2","noticeNodes","index","Boolean","createChainedFunction","bind","extends_default","content","Animate","getTransitionName","string","oneOfType","object","top","left","newInstance","properties","callback","_ref2","getContainer","objectWithoutProperties_default","div","document","appendChild","body","called","react_dom_default","render","ref","notification","noticeProps","removeNotice","component","destroy","unmountComponentAtNode","parentNode","removeChild","es","_extends","assign","target","i","source","prototype","hasOwnProperty","defaultGetContainer","notificationInstance","defaultDuration","defaultTop","defaultBottom","defaultPlacement","getPlacementStyle","placement","bottom","typeToIcon","success","warning","api","open","outerPrefixCls","iconNode","icon","type","iconType","autoMarginTag","description","_ref$placement","_ref$getContainer","cacheKey","getNotificationInstance","message","btn","keys","forEach","config","options","warn","runtime","Op","hasOwn","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","GenStateSuspendedStart","method","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","obj","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","awrap","async","iter","toString","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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","file":"static/js/0.ea566603.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import '../../style/index.less';\nimport './index.less';","import _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nvar Notice = function (_Component) {\n  _inherits(Notice, _Component);\n\n  function Notice() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Notice);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Notice.__proto__ || Object.getPrototypeOf(Notice)).call.apply(_ref, [this].concat(args))), _this), _this.close = function (e) {\n      if (e) {\n        e.stopPropagation();\n      }\n\n      _this.clearCloseTimer();\n\n      _this.props.onClose();\n    }, _this.startCloseTimer = function () {\n      if (_this.props.duration) {\n        _this.closeTimer = setTimeout(function () {\n          _this.close();\n        }, _this.props.duration * 1000);\n      }\n    }, _this.clearCloseTimer = function () {\n      if (_this.closeTimer) {\n        clearTimeout(_this.closeTimer);\n        _this.closeTimer = null;\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Notice, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.startCloseTimer();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.duration !== prevProps.duration || this.props.update) {\n        this.restartCloseTimer();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.clearCloseTimer();\n    }\n  }, {\n    key: 'restartCloseTimer',\n    value: function restartCloseTimer() {\n      this.clearCloseTimer();\n      this.startCloseTimer();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _className;\n\n      var props = this.props;\n      var componentClass = props.prefixCls + '-notice';\n      var className = (_className = {}, _defineProperty(_className, '' + componentClass, 1), _defineProperty(_className, componentClass + '-closable', props.closable), _defineProperty(_className, props.className, !!props.className), _className);\n      return React.createElement('div', {\n        className: classNames(className),\n        style: props.style,\n        onMouseEnter: this.clearCloseTimer,\n        onMouseLeave: this.startCloseTimer,\n        onClick: props.onClick\n      }, React.createElement('div', {\n        className: componentClass + '-content'\n      }, props.children), props.closable ? React.createElement('a', {\n        tabIndex: '0',\n        onClick: this.close,\n        className: componentClass + '-close'\n      }, props.closeIcon || React.createElement('span', {\n        className: componentClass + '-close-x'\n      })) : null);\n    }\n  }]);\n\n  return Notice;\n}(Component);\n\nNotice.propTypes = {\n  duration: PropTypes.number,\n  onClose: PropTypes.func,\n  children: PropTypes.any,\n  update: PropTypes.bool,\n  closeIcon: PropTypes.node\n};\nNotice.defaultProps = {\n  onEnd: function onEnd() {},\n  onClose: function onClose() {},\n  duration: 1.5,\n  style: {\n    right: '50%'\n  }\n};\nexport default Notice;","import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport Animate from 'rc-animate';\nimport createChainedFunction from 'rc-util/es/createChainedFunction';\nimport classnames from 'classnames';\nimport Notice from './Notice';\nvar seed = 0;\nvar now = Date.now();\n\nfunction getUuid() {\n  return 'rcNotification_' + now + '_' + seed++;\n}\n\nvar Notification = function (_Component) {\n  _inherits(Notification, _Component);\n\n  function Notification() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Notification);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Notification.__proto__ || Object.getPrototypeOf(Notification)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      notices: []\n    }, _this.add = function (notice) {\n      var key = notice.key = notice.key || getUuid();\n      var maxCount = _this.props.maxCount;\n\n      _this.setState(function (previousState) {\n        var notices = previousState.notices;\n        var noticeIndex = notices.map(function (v) {\n          return v.key;\n        }).indexOf(key);\n        var updatedNotices = notices.concat();\n\n        if (noticeIndex !== -1) {\n          updatedNotices.splice(noticeIndex, 1, notice);\n        } else {\n          if (maxCount && notices.length >= maxCount) {\n            notice.updateKey = updatedNotices[0].updateKey || updatedNotices[0].key;\n            updatedNotices.shift();\n          }\n\n          updatedNotices.push(notice);\n        }\n\n        return {\n          notices: updatedNotices\n        };\n      });\n    }, _this.remove = function (key) {\n      _this.setState(function (previousState) {\n        return {\n          notices: previousState.notices.filter(function (notice) {\n            return notice.key !== key;\n          })\n        };\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Notification, [{\n    key: 'getTransitionName',\n    value: function getTransitionName() {\n      var props = this.props;\n      var transitionName = props.transitionName;\n\n      if (!transitionName && props.animation) {\n        transitionName = props.prefixCls + '-' + props.animation;\n      }\n\n      return transitionName;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this,\n          _className;\n\n      var props = this.props;\n      var notices = this.state.notices;\n      var noticeNodes = notices.map(function (notice, index) {\n        var update = Boolean(index === notices.length - 1 && notice.updateKey);\n        var key = notice.updateKey ? notice.updateKey : notice.key;\n        var onClose = createChainedFunction(_this2.remove.bind(_this2, notice.key), notice.onClose);\n        return React.createElement(Notice, _extends({\n          prefixCls: props.prefixCls\n        }, notice, {\n          key: key,\n          update: update,\n          onClose: onClose,\n          onClick: notice.onClick,\n          closeIcon: props.closeIcon\n        }), notice.content);\n      });\n      var className = (_className = {}, _defineProperty(_className, props.prefixCls, 1), _defineProperty(_className, props.className, !!props.className), _className);\n      return React.createElement('div', {\n        className: classnames(className),\n        style: props.style\n      }, React.createElement(Animate, {\n        transitionName: this.getTransitionName()\n      }, noticeNodes));\n    }\n  }]);\n\n  return Notification;\n}(Component);\n\nNotification.propTypes = {\n  prefixCls: PropTypes.string,\n  transitionName: PropTypes.string,\n  animation: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  style: PropTypes.object,\n  maxCount: PropTypes.number,\n  closeIcon: PropTypes.node\n};\nNotification.defaultProps = {\n  prefixCls: 'rc-notification',\n  animation: 'fade',\n  style: {\n    top: 65,\n    left: '50%'\n  }\n};\n\nNotification.newInstance = function newNotificationInstance(properties, callback) {\n  var _ref2 = properties || {},\n      getContainer = _ref2.getContainer,\n      props = _objectWithoutProperties(_ref2, ['getContainer']);\n\n  var div = document.createElement('div');\n\n  if (getContainer) {\n    var root = getContainer();\n    root.appendChild(div);\n  } else {\n    document.body.appendChild(div);\n  }\n\n  var called = false;\n\n  function ref(notification) {\n    if (called) {\n      return;\n    }\n\n    called = true;\n    callback({\n      notice: function notice(noticeProps) {\n        notification.add(noticeProps);\n      },\n      removeNotice: function removeNotice(key) {\n        notification.remove(key);\n      },\n      component: notification,\n      destroy: function destroy() {\n        ReactDOM.unmountComponentAtNode(div);\n        div.parentNode.removeChild(div);\n      }\n    });\n  }\n\n  ReactDOM.render(React.createElement(Notification, _extends({}, props, {\n    ref: ref\n  })), div);\n};\n\nexport default Notification;","import Notification from './Notification';\nexport default Notification;","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport Notification from 'rc-notification';\nimport Icon from '../icon';\nvar notificationInstance = {};\nvar defaultDuration = 4.5;\nvar defaultTop = 24;\nvar defaultBottom = 24;\nvar defaultPlacement = 'topRight';\nvar defaultGetContainer;\n\nfunction setNotificationConfig(options) {\n  var duration = options.duration,\n      placement = options.placement,\n      bottom = options.bottom,\n      top = options.top,\n      getContainer = options.getContainer;\n\n  if (duration !== undefined) {\n    defaultDuration = duration;\n  }\n\n  if (placement !== undefined) {\n    defaultPlacement = placement;\n  }\n\n  if (bottom !== undefined) {\n    defaultBottom = bottom;\n  }\n\n  if (top !== undefined) {\n    defaultTop = top;\n  }\n\n  if (getContainer !== undefined) {\n    defaultGetContainer = getContainer;\n  }\n}\n\nfunction getPlacementStyle(placement) {\n  var top = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultTop;\n  var bottom = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultBottom;\n  var style;\n\n  switch (placement) {\n    case 'topLeft':\n      style = {\n        left: 0,\n        top: top,\n        bottom: 'auto'\n      };\n      break;\n\n    case 'topRight':\n      style = {\n        right: 0,\n        top: top,\n        bottom: 'auto'\n      };\n      break;\n\n    case 'bottomLeft':\n      style = {\n        left: 0,\n        top: 'auto',\n        bottom: bottom\n      };\n      break;\n\n    default:\n      style = {\n        right: 0,\n        top: 'auto',\n        bottom: bottom\n      };\n      break;\n  }\n\n  return style;\n}\n\nfunction getNotificationInstance(_ref, callback) {\n  var prefixCls = _ref.prefixCls,\n      _ref$placement = _ref.placement,\n      placement = _ref$placement === void 0 ? defaultPlacement : _ref$placement,\n      _ref$getContainer = _ref.getContainer,\n      getContainer = _ref$getContainer === void 0 ? defaultGetContainer : _ref$getContainer,\n      top = _ref.top,\n      bottom = _ref.bottom;\n  var cacheKey = \"\".concat(prefixCls, \"-\").concat(placement);\n\n  if (notificationInstance[cacheKey]) {\n    callback(notificationInstance[cacheKey]);\n    return;\n  }\n\n  Notification.newInstance({\n    prefixCls: prefixCls,\n    className: \"\".concat(prefixCls, \"-\").concat(placement),\n    style: getPlacementStyle(placement, top, bottom),\n    getContainer: getContainer,\n    closeIcon: React.createElement(Icon, {\n      className: \"\".concat(prefixCls, \"-close-icon\"),\n      type: 'close'\n    })\n  }, function (notification) {\n    notificationInstance[cacheKey] = notification;\n    callback(notification);\n  });\n}\n\nvar typeToIcon = {\n  success: 'check-circle-o',\n  info: 'info-circle-o',\n  error: 'close-circle-o',\n  warning: 'exclamation-circle-o'\n};\n\nfunction notice(args) {\n  var outerPrefixCls = args.prefixCls || 'ant-notification';\n  var prefixCls = \"\".concat(outerPrefixCls, \"-notice\");\n  var duration = args.duration === undefined ? defaultDuration : args.duration;\n  var iconNode = null;\n\n  if (args.icon) {\n    iconNode = React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-icon\")\n    }, args.icon);\n  } else if (args.type) {\n    var iconType = typeToIcon[args.type];\n    iconNode = React.createElement(Icon, {\n      className: \"\".concat(prefixCls, \"-icon \").concat(prefixCls, \"-icon-\").concat(args.type),\n      type: iconType\n    });\n  }\n\n  var autoMarginTag = !args.description && iconNode ? React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-message-single-line-auto-margin\")\n  }) : null;\n  var placement = args.placement,\n      top = args.top,\n      bottom = args.bottom,\n      getContainer = args.getContainer;\n  getNotificationInstance({\n    prefixCls: outerPrefixCls,\n    placement: placement,\n    top: top,\n    bottom: bottom,\n    getContainer: getContainer\n  }, function (notification) {\n    notification.notice({\n      content: React.createElement(\"div\", {\n        className: iconNode ? \"\".concat(prefixCls, \"-with-icon\") : ''\n      }, iconNode, React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-message\")\n      }, autoMarginTag, args.message), React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-description\")\n      }, args.description), args.btn ? React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-btn\")\n      }, args.btn) : null),\n      duration: duration,\n      closable: true,\n      onClose: args.onClose,\n      onClick: args.onClick,\n      key: args.key,\n      style: args.style || {},\n      className: args.className\n    });\n  });\n}\n\nvar api = {\n  open: notice,\n  close: function close(key) {\n    Object.keys(notificationInstance).forEach(function (cacheKey) {\n      return notificationInstance[cacheKey].removeNotice(key);\n    });\n  },\n  config: setNotificationConfig,\n  destroy: function destroy() {\n    Object.keys(notificationInstance).forEach(function (cacheKey) {\n      notificationInstance[cacheKey].destroy();\n      delete notificationInstance[cacheKey];\n    });\n  }\n};\n['success', 'info', 'warning', 'error'].forEach(function (type) {\n  api[type] = function (args) {\n    return api.open(_extends({}, args, {\n      type: type\n    }));\n  };\n});\napi.warn = api.warning;\nexport default api;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\ntypeof module === \"object\" ? module.exports : {});\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}"],"sourceRoot":""}